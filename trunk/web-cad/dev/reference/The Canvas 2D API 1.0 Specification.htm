<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0086)http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#section-canvas-interface-element -->
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <title>The Canvas 2D API 1.0 Specification</title>
    <link rel="stylesheet" type="text/css" href="./The Canvas 2D API 1.0 Specification_files/html5-style.css">
    <link rel="stylesheet" href="./The Canvas 2D API 1.0 Specification_files/W3C-WD" type="text/css">
    <style type="text/css">
	.style1 {
		background-color: #EEEEEE;
	}
	</style>
  </head>
  <body>
    <div class="head">
      <p>
        <a href="http://www.w3.org/">
          <img width="72" alt="W3C" src="./The Canvas 2D API 1.0 Specification_files/w3c_home" height="48">
        </a>
      </p>
      <h1>Canvas 2D API Specification 1.0 </h1>
   <!--:ZZZ Update: W3C Editor's Draft 25 August 2009 -->
     <h2 class="no-num no-toc">W3C Editor's Draft 21 October 2009</h2>
   <!--:ZZZ-->
      <dl>
   <!-- :ZZZ 
        The syntax of a "This Version" URI MUST be <http://www.w3.org/TR/0001/WD-shortname-0001MMDD/> -->
       <dt>This Version:</dt>
        <dd><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html">http://dev.w3.org/html5/canvas-api/canvas-2d-api.html</a></dd>
 <!--  :ZZZ FILL IN (w/ URLs) -->
       <dt>Latest Version:</dt>
        <dd><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html">http://dev.w3.org/html5/canvas-api/canvas-2d-api.html</a></dd>
        <dt>Authors:</dt>
        <dd>The authors of this specification are the participants of the W3C HTML Working Group.</dd>
        <dt>Editors:</dt>
        <dd><a href="mailto:ian@hixie.ch">Ian Hickson</a>, Google, Inc.</dd>
        <dd>David Hyatt, Apple, Inc.</dd>
        <dd>Doug Schepers, W3C</dd>
        <dd>Eliot Graff, Microsoft Corporation</dd>
      </dl>
      <p class="copyright"><a href="http://www.w3.org/Consortium/Legal/ipr-notice#Copyright">Copyright</a> © 2009 <a href="http://www.w3.org/"><acronym title="World Wide Web Consortium">W3C</acronym></a><sup>®</sup> (<a href="http://www.csail.mit.edu/"><acronym title="Massachusetts Institute of Technology">MIT</acronym></a>, <a href="http://www.ercim.org/"><acronym title="European Research Consortium for Informatics and Mathematics">ERCIM</acronym></a>, <a href="http://www.keio.ac.jp/">Keio</a>), All Rights Reserved. W3C <a href="http://www.w3.org/Consortium/Legal/ipr-notice#Legal_Disclaimer">liability</a>, <a href="http://www.w3.org/Consortium/Legal/ipr-notice#W3C_Trademarks">trademark</a> and <a href="http://www.w3.org/Consortium/Legal/copyright-documents">document use</a> rules apply.</p>
    </div>
    <hr title="Separator from Header">
    <h2 id="abstract">Abstract</h2>
    <p>This specification defines the 2D Canvas Drawing API, a common programmatic interface to draw immediate-mode two-dimensional graphics on the Web.</p>

<!-- required Status section -->
    <h2 id="status">Status of This Document</h2>
<!-- required introductory status boilerplate -->
    <p><em>This section describes the status of this document at the time of its publication. Other documents may supersede this document. A list of current W3C publications and the latest revision of this technical report can be found in the <a href="http://www.w3.org/TR/">W3C technical reports index</a> at http://www.w3.org/TR/.</em></p>
<!-- ZZZ: remove after publication: required indication of first public working draft --->
<!--- where to send feedback (required). includes name of the W3C group that produced the document --> 
<!-- ZZZ: update version -->
    <p>This is a First Public Working Draft of "The Canvas 2D API Specification1.0 ."</p> 
    <p>You can follow the change history for the specification through a browsable version-control record of all changes. 	The CVSWeb interface with side-by-side diffs can be found at <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html">http://dev.w3.org/html5/canvas-api/canvas-2d-api.html</a>
    </p><p>This document was developed by the W3C <a href="http://www.w3.org/html/wg/">HTML Working Group</a>.  The Working Group expects to advance this Working Draft to Recommendation Status. The <a href="http://www.w3.org/2004/01/pp-impl/40318/status">HTML Working Group Patent Policy Status</a> is publicly available.</p>
<!-- required name and link of a mailing list for comments that has a public archive-->
	<p>If you wish to make comments regarding this document, please send them to 
		<a href="mailto:public-canvas-api@w3.org">public-canvas-api@w3.org</a> 
		   (<a href="mailto:public-canvas-api-request@w3.org?subject=subscribe">subscribe</a>, <a href="http://lists.w3.org/Archives/Public/public-canvas-api/">archives</a>),
		<a href="mailto:public-canvas-api@w3.org">public-html-comments@w3.org</a>
		   (<a href="mailto:public-html-comments-request@w3.org?subject=subscribe">subscribe</a>, <a href="http://lists.w3.org/Archives/Public/public-html-comments/">archives</a>),
		or submit them using <a href="http://www.w3.org/Bugs/Public/enter_bug.cgi?product=HTML%20WG">our public bug database</a>.
        All feedback is welcome. We maintain <a href="http://www.w3.org/Bugs/Public/buglist.cgi?component=Spec%20bugs&component=Spec%20proposals&product=HTML%20WG&resolution=NEEDSINFO&resolution=LATER&resolution=REMIND&resolution=---&order=bugs.resolution%2Cbugs.priority%2C%20bugs.bug_severity">a list of all bug reports that have not yet been resolved</a>.</p>
<!-- required customized paragraph, includes the title page date -->
<!-- ZZZ: update type and date of document -->
<p>Publication as a Working Draft does not imply endorsement by the W3C Membership. This is a draft document and may be updated, replaced or 
made obsolete by other documents at any time. It is inappropriate to cite this document as other than work in progress. </p>
<!-- required boilerplate text related to patent policy requirements -->
    <p> This document was produced by a group operating under the <a href="http://www.w3.org/Consortium/Patent-Policy-20040205/">5 February 2004 W3C Patent Policy</a>. W3C maintains a <a rel="disclosure" href="http://dev.w3.org/html5/canvas-api/@@URI%20to%20IPP%20status%20or%20other%20page@@">public list of any patent disclosures</a> made in connection with the deliverables of the group; that page also includes instructions for disclosing a patent. An individual who has actual knowledge of a patent which the individual believes contains <a href="http://www.w3.org/Consortium/Patent-Policy-20040205/#def-essential">Essential Claim(s)</a> must disclose the information in accordance with <a href="http://www.w3.org/Consortium/Patent-Policy-20040205/#sec-Disclosure">section 6 of the W3C Patent Policy</a>. </p>

<!-- TOC -->
    <div class="section">
      <h2 id="contents">Table of Contents</h2>
      <ul class="toc">
        <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#introduction">1. Introduction</a>
          <ul class="toc">
            <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#defs">1.1. Definitions</a></li>
            <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#notcovered">1.2. Not in This Specification</a></li>
            <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#conformance">1.3. Conformance</a></li>
          </ul>
        </li>
        <li><a href="./The Canvas 2D API 1.0 Specification_files/The Canvas 2D API 1.0 Specification.htm">2. The Canvas Interface Element</a>
          <ul class="toc">
            <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#the-canvas-interface-element"> 2.1. The <code>canvas interface</code> element</a>
              <ul class="toc">
                <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#getcontext-method"> 2.1.1. The <code>getContext()</code> Method</a></li>
                <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#todataurl-method"> 2.1.2. The <code>toDataURL()</code> Method</a></li>
              </ul>
            </li>
          </ul>
        </li>
        <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#the-2d-drawing-context">3. The 2D Drawing Context</a>
          <ul class="toc">
            <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#the-canvas-state">3.1 The canvas state</a></li>
            <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#transformations">3.2 Transformations</a></li>
            <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#compositing"> 3.3 Compositing</a></li>
            <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#colors-and-styles">3.4 Colors and styles</a></li>
            <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#line-styles"> 3.5 Line styles</a></li>
            <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#shadows">3.6 Shadows</a></li>
            <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#simple-shapes-rectangles"> 3.7 Simple shapes (rectangles)</a></li>
            <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#complex-shapes-paths"> 3.8 Complex shapes (paths)</a></li>
            <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#text"> 3.9 Text</a></li>
            <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#images">3.10 Images</a></li>
            <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#pixel-manipulation">3.11 Pixel manipulation</a></li>
            <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#drawing-model">3.12 Drawing model</a></li>
          </ul>
        </li>
        <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#color-spaces-and-color-correction">4. Color spaces and color correction</a></li>
        <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#accessibility">5. Accessibility Considerations</a></li>
        <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#security-with-canvas-elements">6. Security with Canvas Interface Elements</a></li>
        <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#relationships">7. Relationship to other specifications</a>
          <ul class="toc">
            <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#rel-html5">7.1. HTML5</a></li>
            <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#rel-dom1core">7.2. DOM Level 3 Core</a></li>
          </ul>
        </li>
        <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#changes">A. Change History</a></li>
        <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#refs">B. References</a>
          <ul class="toc">
            <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#informrefs">Informative References</a></li>
            <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#normrefs">Normative References</a></li>
          </ul>
        </li>
        <li><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#Acknowledgments">C. Acknowledgments</a></li>
      </ul>
    </div>
    
    
    
    <div class="section">
      <h2 id="introduction">1. Introduction</h2>
      <p>This specification describes an <a href="http://dev.w3.org/html5/canvas-api/def-immediate-mode">immediate-mode</a> API 
	  and associated utility methods for drawing two-dimensional <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-vector">vector</a> graphics 
	  to a <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-raster">raster</a> rendering area.  This API is suitable for implementation on any element which contains, describes, or references a raster image, as defined by the host language for that element.  Most notably, it is applicable to the <a href="http://dev.w3.org/html5/spec/the-canvas-element.html#the-canvas-element"><code>canvas</code></a> element defined in the <a href="http://dev.w3.org/html5/spec/spec.html">HTML5 specification</a> but may also be available to the <code>image</code> element in future versions of SVG.  The API described in this specification is supplementary to any other interfaces defined for the element by the host language.</p>
      <div class="section">
        <h3 id="defs">1.1. Definitions</h3>
        <p>
          <strong>This section is normative.</strong>
        </p>
        <dl>
          <dt>
            <span id="def-2D" class="dom-attr-name">2D</span>
          </dt>
          <dd>See <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-two-dimensional">two-dimensional</a></dd>
          <dt>
            <span id="def-3D" class="dom-attr-name">3D</span>
          </dt>
          <dd>See <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-three-dimensional">three-dimensional</a></dd>
          <dt>
            <span id="def-api" class="dom-attr-name">API</span>
          </dt>
          <dd>An <em>application programming interface</em> consisting of methods and properties which allow the author to get or set data or execute commands to the user agent.</dd>
          <dt>
            <span id="def-canvas-interface-element" class="dom-attr-name">canvas interface element</span>
          </dt>
          <dd>The element implementing the methods and properties described in this specification, and serving as the rendering context for the drawing commands.  In HTML5, this is the <code>canvas</code> element.</dd>
          <dt>
            <span id="def-drawing-context" class="dom-attr-name">drawing context</span>
          </dt>
          <dd>Represents a Cartesian surface whose origin
          (0,0) is at the top left corner, with the coordinate space having
          <var title="">x</var> values increasing when going right, and <var title="">y</var> values increasing when going down.</dd>
          <dt> 
            <span id="def-immediate-mode" class="dom-attr-name">immediate-mode</span>
          </dt>
          <dd>A drawing format in which the drawing instructions are discarded from memory after rendering.  This API is an example of an immediate-mode graphics format.</dd>
          <dt>
            <span id="def-retained-mode" class="dom-attr-name">retained-mode</span>
          </dt>
          <dd>A drawing format in which the drawing instructions are retained in memory, such as in a DOM.  SVG is an example of a retained-mode graphics format.</dd>
          <dt>
            <span id="def-raster" class="dom-attr-name">raster</span>
          </dt>
          <dd>A style of graphics in which the image is broken up into a matrix made up of rows, each of which contains a certain number of pixels.</dd>
          <dt>
            <span id="def-source-over-operator" class="dom-attr-name">source-over operator</span>
          </dt>
          <dd>An operator that places the source over the destination. The color that results from the operation is a combination of the three sub-pixel regions: the source color from the overlapping region, the source color that isn't obscured by the destination color, and the destination color that isn't obscured by the source color contribution to the resultant color. The resultant opacity is the combined opacity from all three contributing regions.</dd>
          <dt>
            <span id="def-vector" class="dom-attr-name">vector</span>
          </dt>
          <dd>A style of graphics in which the image is created from path-based, 
		  mathematical descriptions.</dd>
          <dt>
            <span id="def-two-dimensional" class="dom-attr-name">two-dimensional</span>
          </dt>
          <dd>In graphics, describing relationships, orientation, and coordinates on a planar surface, where location can be completely described with exactly two orthogonal axes, where <code>x</code> represents the horizontal and <code>y</code> represents the vertical.</dd>
          <dt>
            <span id="def-three-dimensional" class="dom-attr-name">three-dimensional</span>
          </dt>
          <dd>In graphics, describing relationships, orientation, and coordinates in a cubic space, where location can be completely described with exactly three orthogonal axes, where <code>x</code> represents the horizontal, <code>y</code> represents the vertical, and <code>z</code> represents the depth.</dd>
        </dl>
      </div>
      <div class="section">
        <h3 id="notcovered">1.2. Not in This Specification</h3>
        <p>
          <strong>This section is informative.</strong>
        </p>
        <p>The manner in which a host language uses the functionality of the 2D Canvas Drawing API is not defined by this group.  In particular, defining the <a href="http://dev.w3.org/html5/spec/the-canvas-element.html#the-canvas-element">canvas element</a> in HTML, and its attributes and characteristics, is not within the scope of this specification.</p>
        <p>This specification covers only a two-dimensional drawing API. Three-dimensional graphics are not within the scope of this specification.</p>
      </div>
      <div class="section">
        <h3 id="conformance">1.3. Conformance</h3>
        <p> 
         The key words "<em class="rfc2119" title="Keyword in RFC 2119 context">MUST</em>",
         "<em class="rfc2119" title="Keyword in RFC 2119 context">MUST NOT</em>", 
         "<em class="rfc2119" title="Keyword in RFC 2119 context">REQUIRED</em>",
         "<em class="rfc2119" title="Keyword in RFC 2119 context">SHALL</em>", 
         "<em class="rfc2119" title="Keyword in RFC 2119 context">SHALL NOT</em>", 
         "<em class="rfc2119" title="Keyword in RFC 2119 context">SHOULD</em>", 
         "<em class="rfc2119" title="Keyword in RFC 2119 context">SHOULD NOT</em>", 
         "<em class="rfc2119" title="Keyword in RFC 2119 context">RECOMMENDED</em>", 
         "<em class="rfc2119" title="Keyword in RFC 2119 context">MAY</em>", 
         and "<em class="rfc2119" title="Keyword in RFC 2119 context">OPTIONAL</em>" in this document are to be interpreted as described in RFC 2119 [<cite><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#refsRFC2119" class="bibref">RFC2119</a></cite>].  For purposes of readability, these terms are not necessarily used in a case-sensitive manner in this document.
      </p>
        <p> 
         Sometimes, for readability, conformance requirements are phrased as requirements on elements, attributes, methods, interfaces, properties or functions. In all cases these are conformance requirements on implementations.  A conforming implementation of this specification meets all requirements identified by the use of these terms, within the scope of its language bindings. 
      </p>
      </div>
      
      
      
      
      
      
      <div class="section">
        <h2 id="section-canvas-interface-element"><span class="secno">2. </span>The Canvas Interface Element</h2>
        <p><strong>This section is normative.</strong> </p>
        <p>This document defines an API intended for integration into a host language, such as HTML or SVG.  The following abstract interface describes the attributes, methods, and objects that must be implemented on a <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> which supports this specification.  The interface name itself may be host-language dependent, as may any additional attributes, methods, and objects supported by the element.</p>
     <!-- Eliot! ADD WebIDL dependency here -->
     	<p>The IDL fragments in this specification must be interpreted as required for conforming IDL fragments, as described in the Web IDL specification. <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#refsWEBIDL">[WEBIDL]</a></p>
		<p>Except where otherwise specified, if an IDL attribute or a method argument that is a floating point number type (<code title="">float</code>) is assigned an Infinity or Not-a-Number (NaN) value, a <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#not_supported_err">NOT_SUPPORTED_ERR</a></code> exception must be raised.</p>
	    <p class="XXX">Which parent element the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvas-interface-element">canvas interface element</a> derives 
	  from, how the Canvas 2D API specification relates to other technologies, or whether the interface should even be defined in this document are under discussion, and will be reflected in this draft as progress is made.</p>

      </div>
      <h3 id="the-canvas-interface-element"><span class="secno">2.1. </span>The <dfn id="canvas-interface-element"><code>canvas interface</code></dfn> element</h3>
      <dl class="element">
        <dt>DOM interface:</dt>
        <dd>
          <pre class="idl">interface <dfn id="canvaselement">CanvasElement</dfn> : <a href="">Element</a> {
               attribute unsigned long <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-canvas-width" title="dom-canvas-width">width</a>;
               attribute unsigned long <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-canvas-height" title="dom-canvas-height">height</a>;

 
      Object <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-canvas-getcontext" title="dom-canvas-getContext">getContext</a>(in DOMString contextId);

      DOMString <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-canvas-todataurl" title="dom-canvas-toDataURL">toDataURL</a>(optional in DOMString type, in any... args);

    };</pre>
        </dd>
      </dl>
      <p>A <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> <a href="http://dev.w3.org/html5/spec/the-xhtml-syntax.html#represents">represents</a> a resolution-dependent bitmap canvas, which can be used for rendering graphs, game graphics, or other visual images 
	  dynamically.</p>
      <p>The definition of a <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> in a host language must have a means for an author to control the width and height of the coordinate space, such as <dfn id="attr-canvas-width" title="attr-canvas-width"><code>width</code></dfn> and <dfn id="attr-canvas-height" title="attr-canvas-height"><code>height</code></dfn> attributes. These width and height attributes, when specified, must have values that are <a href="http://dev.w3.org/html5/spec/infrastructure.html#valid-non-negative-integer" title="valid non-negative integer">valid non-negative integers</a>. <span class="impl">The <a href="http://dev.w3.org/html5/spec/infrastructure.html#rules-for-parsing-non-negative-integers">rules for parsing non-negative integers</a> must be used to obtain their numeric values.</span> The host language should provide default values for the width and height of the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> to be used if value are not specified by the author.  Optionally, a host language may allow the element to be sized arbitrarily by a style sheet. </p>
      <p>The intrinsic dimensions of the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> equal the size of the coordinate space, with the numbers interpreted in CSS pixels. During rendering, the image must be scaled to fit this layout size.</p>
      <div class="impl">
        <p>The size of the coordinate space does not necessarily represent the size of the actual bitmap that the user agent will use internally or during rendering. On high-definition displays, for instance, the user agent may internally use a bitmap with two device pixels per unit in the coordinate space. 
		In this case, the rendering remains at high quality throughout the 
		process.</p>
        <p>The <dfn id="dom-canvas-width" title="dom-canvas-width"><code>width</code></dfn> and <dfn id="dom-canvas-height" title="dom-canvas-height"><code>height</code></dfn> DOM attributes must <a href="http://dev.w3.org/html5/spec/infrastructure.html#reflect">reflect</a> the respective derived values, such as the content attributes of the same names.</p>
        <p>Whenever the values of the width or height attributes are set (whether to a new value or to 
		a previous value), the bitmap and any associated contexts must be cleared back to their initial state and reinitialized with the newly specified coordinate space dimensions. 
		Because of this, only the last square is rendered at the end of the following HTML example:</p>
      </div>
      <div class="example">
        <pre>      // canvas is a reference to a &lt;canvas&gt; element 
      var context = canvas.getContext('2d');
      context.fillRect(0,0,50,50);
      canvas.setAttribute('width', '300'); // clears the canvas 
      context.fillRect(0,100,50,50);
      canvas.width = canvas.width;         // clears the canvas 
      context.fillRect(100,0,50,50);       // only this square remains</pre>
      </div>
      <div class="impl">
        <p>When the canvas is initialized it must be set to fully transparent 
		black.</p>
      </div>
      
      
      
      <h4 id="getcontext-method"><span class="secno">2.1.1. </span>The <code>getContext()</code> Method</h4>
      <p>To draw on the canvas, authors must first obtain a reference to a
      <dfn id="context">context</dfn> by using the <dfn id="dom-canvas-getcontext" title="dom-canvas-getContext"><code>getContext(<var title="">contextId</var>)</code></dfn> method of the
      <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a>.</p>
      <dl class="domintro">
        <dt><var title="">context</var> = <var title="">canvas</var> . <code title="dom-canvas-getContext"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-canvas-getcontext">getContext</a></code>(<var title="">contextId</var>)</dt>
        <dd>
          <p>Returns an object that exposes an API for drawing on the canvas.</p>
          <p>Returns null if the given context ID is not supported.</p>
        </dd>
      </dl>
      <p>This specification only defines one context, with the name "<code title="canvas-context-2d"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvas-context-2d">2d</a></code>". <span class="impl">If <code title="dom-canvas-getContext"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-canvas-getcontext">getContext()</a></code> is called with that exact string for its <var title="">contextId</var> argument,
      then the UA must return a reference to an object implementing
      <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvasrenderingcontext2d">CanvasRenderingContext2D</a></code>. Other specifications may define their own contexts, which would return different objects.</span></p>
      <div class="impl">
        <p>Vendors may also define experimental contexts by using the syntax
      <code><var title="">vendorname</var>-<var title="">context</var></code>, for example, <code>moz-3d</code>.</p>
        <p>When the UA is passed an empty string or a string specifying a context that it does not support, then it must return null. String comparisons must be <a href="http://dev.w3.org/html5/spec/infrastructure.html#case-sensitive">case-sensitive</a>.</p>
      </div>
      <p class="note">A future version of this specification will probably define a <code>3d</code> context.</p>
      <hr>
      
      
      <h4 id="todataurl-method"><span class="secno">2.1.2. </span>The <code>toDataURL()</code> Method</h4>
      <p>The <code>toDataURL()</code> method provides a means to return the current state of the rendered canvas as a raster image.</p>
      <dl class="domintro">
        <dt><var title="">url</var> = <var title="">canvas</var> . <code title="dom-canvas-toDataURL"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-canvas-todataurl">toDataURL</a></code>( [ <var title="">type</var>, ... ])</dt>
        <dd>
          <p>Returns a <code title="">data:</code> URL for the image in the canvas.</p>
        </dd>
      </dl>
      	  <p>The <dfn id="dom-canvas-todataurl" title="dom-canvas-toDataURL"><code>toDataURL()</code></dfn> method must, when called with no arguments, return a <code title="">data:</code> URL containing a representation of the image as a PNG file. <a href="http://dev.w3.org/html5/spec/references.html#refsPNG">[PNG]</a>.</p>
        <p>If the canvas has no pixels (as when either its horizontal dimension or its vertical dimension is zero) then the method must return the string "<code title="">data:,</code>". This is the shortest <code title="">data:</code> URL 
		and represents the empty string in a <code title="">text/plain</code> 
		resource.</p>
        <p>The first argument, if provided, controls the type of the image to be returned (such 
		  as PNG or JPEG). The default type is <code title="">image/png</code>. The <code title="">image/png</code> type is also used if the given type is not supported. The other arguments are specific to the type 
		and control the way that the image is generated. </p>
		  <p>The <code title="dom-canvas-toDataURL"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-canvas-todataurl">toDataURL(<var title="">type</var>)</a></code> method, when called with one <em>or more</em> arguments, must return a <code title="">data:</code> URL containing a representation of the image in the format given by <var title="">type</var>. The possible values are <a href="http://dev.w3.org/html5/spec/infrastructure.html#mime-type" title="MIME       type">MIME types</a> with no parameters, for example
      <code>image/png</code>, <code>image/jpeg</code>, or even <code>image/svg+xml</code>, if the implementation keeps enough information to reliably render an SVG image from the canvas. If the method is invoked with the first argument giving a type corresponding to one of the types given in the first column of the following table, and the user agent supports that type, then the subsequent arguments, if any, must be treated as described in the second cell of that 
		  row.</p>
	 <table>
        <thead>
          <tr>
            <th> Type </th>
            <th> Other arguments
       </th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td> image/jpeg
         </td>
            <td> The second argument<span class="impl">, if it</span> is a 
			number between 0.0 and 1.0<span class="impl">, must be</span>
            treated as the desired quality level. <span class="impl">If it is 
			not a number or is outside that range, the user agent must use its 
			default value, as if the argument had been omitted.</span>
      </td>
          </tr>
        </tbody>
      </table>
        <p>Other arguments must be ignored and must not cause the user agent to raise an exception. A future version of this specification will probably define other parameters to be passed to <code title="dom-canvas-toDataURL"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-canvas-todataurl">toDataURL()</a></code> to allow authors to more carefully control compression settings, image metadata,
      etc.</p>
        <p>User agents must <a href="http://dev.w3.org/html5/spec/infrastructure.html#converted-to-ascii-lowercase" title="converted to ASCII lowercase">convert the provided type to ASCII lowercase</a> before establishing if they support that type and before creating the <code title="">data:</code> URL.</p>
        <p>Only support for <code>image/png</code> is required. User agents may support other types. If the user agent does not support the requested type, it must return the image using the PNG format.</p>
      <p class="note">When trying to use types other than
      <code>image/png</code>, authors can check if the image was really returned in the requested format by checking to see if the returned string starts with one the exact strings "<code title="">data:image/png,</code>" or "<code title="">data:image/png;</code>". If it does, the image is PNG, and thus the requested type was not supported. (The one exception to this is if the canvas has either no height or no width, in which case the result might simply be "<code title="">data:,</code>".)</p>
        <p>For image types that do not support an alpha channel, the image must be composited onto a solid black background using the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-source-over-operator">source-over operator</a>, and the resulting image must be the one used to create the <code title="">data:</code> URL.</p>
      </div>
    
    


    <div class="section">
      <h2 id="the-2d-drawing-context">3. The 2D Drawing Context</h2>
<!-- v2: we're on v3. suggestions for next version are marked v4. -->
      <p>When the <code title="dom-canvas-getContext"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-canvas-getcontext">getContext()</a></code>
          method of a <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> is invoked with <dfn id="canvas-context-2d" title="canvas-context-2d"><code>2d</code></dfn> as the argument, a
          <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvasrenderingcontext2d">CanvasRenderingContext2D</a></code> object is returned. The <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvasrenderingcontext2d">CanvasRenderingContext2D</a></code> object is 
	  a 2D <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-drawing-context">drawing context</a> that represents a flat Cartesian surface whose origin
          (0,0) is at the top left corner. The coordinate space <var title="">x</var> 
	  values increase going right, and the <var title="">y</var> values increase going down.</p>
      <div class="impl">
        <p>There is only one <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvasrenderingcontext2d">CanvasRenderingContext2D</a></code> object per canvas. 
		Calling the <code title="dom-canvas-getContext"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-canvas-getcontext">getContext()</a></code> method with the
          <code title="canvas-context-2d"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvas-context-2d">2d</a></code> argument a second time must return the same object.</p>
      </div>
      <pre class="idl">interface <dfn id="canvasrenderingcontext2d">CanvasRenderingContext2D</dfn> {

  // back-reference to the canvas 
  readonly attribute <a href="http://www.w3.org/TR/html5/the-canvas-element.html#htmlcanvaselement">HTMLCanvasElement</a> <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-canvas" title="dom-context-2d-canvas">canvas</a>;

  // state 
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-restore" title="dom-context-2d-restore">restore</a>(); // pop state stack and restore state
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-save" title="dom-context-2d-save">save</a>(); 	  // push state on state stack 
        <!--
          // v4 we've also received requests for:
                  attribute boolean <span title="dom-context-2d-forceHighQuality">forceHighQuality</span> // (default false)
          // when enabled, it would prevent the UA from falling back on lower-quality but faster rendering routines
          // useful e.g. for when an image manipulation app uses <canvas> both for UI previews and the actual work
        -->
  // transformations (default transform is the identity matrix)
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-rotate" title="dom-context-2d-rotate">rotate</a>(in float angle);
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-scale" title="dom-context-2d-scale">scale</a>(in float x, in float y);
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-settransform" title="dom-context-2d-setTransform">setTransform</a>(in float m11, in float m12, in float m21, in float m22, in float dx, in float dy);
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-transform" title="dom-context-2d-transform">transform</a>(in float m11, in float m12, in float m21, in float m22, in float dx, in float dy);
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-translate" title="dom-context-2d-translate">translate</a>(in float x, in float y);
        <!--
          // v4 we've also received requests for:
          void skew(...);
          void reflect(...); // or mirror(...)
        -->
  // compositing 
  attribute float <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalalpha" title="dom-context-2d-globalAlpha">globalAlpha</a>; // (default 1.0)
  attribute DOMString <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalcompositeoperation" title="dom-context-2d-globalCompositeOperation">globalCompositeOperation</a>; // (default source-over)
        <!--
          // v4 we've also received requests for:
          - turning off antialiasing to avoid seams when patterns are painted next to each other
            - might be better to overdraw?
            - might be better to just draw at a higher res then downsample, like for 3d?
          - nested layers
            - the ability to composite an entire set of drawing operations with one shadow all at once http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2008-August/015567.html
        -->
  // colors and styles 
  attribute any <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-fillstyle" title="dom-context-2d-fillStyle">fillStyle</a>; // (default black)
  attribute any <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-strokestyle" title="dom-context-2d-strokeStyle">strokeStyle</a>; // (default black)
  <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvasgradient">CanvasGradient</a> <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-createlineargradient" title="dom-context-2d-createLinearGradient">createLinearGradient</a>(in float x0, in float y0, in float x1, in float y1);
  <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvasgradient">CanvasGradient</a> <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-createradialgradient" title="dom-context-2d-createRadialGradient">createRadialGradient</a>(in float x0, in float y0, in float r0, in float x1, in float y1, in float r1);
  <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspattern">CanvasPattern</a> <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-createpattern" title="dom-context-2d-createPattern">createPattern</a>(in <a href="http://www.w3.org/TR/html5/text-level-semantics.html#htmlimageelement">HTMLImageElement</a> image, in DOMString repetition);
  <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspattern">CanvasPattern</a> <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-createpattern" title="dom-context-2d-createPattern">createPattern</a>(in <a href="http://www.w3.org/TR/html5/the-canvas-element.html#htmlcanvaselement">HTMLCanvasElement</a> image, in DOMString repetition);
  <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspattern">CanvasPattern</a> <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-createpattern" title="dom-context-2d-createPattern">createPattern</a>(in <a href="http://dev.w3.org/html5/spec/video.html#htmlvideoelement">HTMLVideoElement</a> image, in DOMString repetition);

  // line st<span class="style1">yles</span> 
  attribute DOMString <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-linecap" title="dom-context-2d-lineCap">lineCap</a>; // "butt", "round", "square" (default "butt")
  attribute DOMString <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-linejoin" title="dom-context-2d-lineJoin">lineJoin</a>; // "miter", "round", "bevel"  (default "miter")
  attribute float <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-linewidth" title="dom-context-2d-lineWidth">lineWidth</a>; // (default 1)
  attribute float <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-miterlimit" title="dom-context-2d-miterLimit">miterLimit</a>; // (default 10)

  // shadows 
  attribute float <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowblur" title="dom-context-2d-shadowBlur">shadowBlur</a>; // (default 0)
  attribute DOMString <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowcolor" title="dom-context-2d-shadowColor">shadowColor</a>; // (default transparent black)
  attribute float <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowoffsetx" title="dom-context-2d-shadowOffsetX">shadowOffsetX</a>; // (default 0)
  attribute float <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowoffsety" title="dom-context-2d-shadowOffsetY">shadowOffsetY</a>; // (default 0)

  // rects 
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-clearrect" title="dom-context-2d-clearRect">clearRect</a>(in float x, in float y, in float w, in float h);
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-fillrect" title="dom-context-2d-fillRect">fillRect</a>(in float x, in float y, in float w, in float h);
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-strokerect" title="dom-context-2d-strokeRect">strokeRect</a>(in float x, in float y, in float w, in float h);

  // Complex shapes (paths) API 
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-arc" title="dom-context-2d-arc">arc</a>(in float x, in float y, in float radius, in float startAngle, in float endAngle, in boolean anticlockwise);
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-arcto" title="dom-context-2d-arcTo">arcTo</a>(in float x1, in float y1, in float x2, in float y2, in float radius);
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-beginpath" title="dom-context-2d-beginPath">beginPath</a>();
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-beziercurveto" title="dom-context-2d-bezierCurveTo">bezierCurveTo</a>(in float cp1x, in float cp1y, in float cp2x, in float cp2y, in float x, in float y);
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-clip" title="dom-context-2d-clip">clip</a>();
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-closepath" title="dom-context-2d-closePath">closePath</a>();
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-fill" title="dom-context-2d-fill">fill</a>();
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-lineto" title="dom-context-2d-lineTo">lineTo</a>(in float x, in float y);
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-moveto" title="dom-context-2d-moveTo">moveTo</a>(in float x, in float y);
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-quadraticcurveto" title="dom-context-2d-quadraticCurveTo">quadraticCurveTo</a>(in float cpx, in float cpy, in float x, in float y);
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-rect" title="dom-context-2d-rect">rect</a>(in float x, in float y, in float w, in float h);
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-stroke" title="dom-context-2d-stroke">stroke</a>();
  boolean <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-ispointinpath" title="dom-context-2d-isPointInPath">isPointInPath</a>(in float x, in float y);

  // text 
  attribute DOMString <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-font" title="dom-context-2d-font">font</a>; // (default 10px sans-serif)
  attribute DOMString <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textalign" title="dom-context-2d-textAlign">textAlign</a>; // "start", "end", "left", "right", "center" (default: "start")
  attribute DOMString <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline" title="dom-context-2d-textBaseline">textBaseline</a>; // "top", "hanging", "middle", "alphabetic", "ideographic", "bottom" (default: "alphabetic")
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-filltext" title="dom-context-2d-fillText">fillText</a>(in DOMString text, in float x, in float y, optional in float maxWidth);
  <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#textmetrics">TextMetrics</a> <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-measuretext" title="dom-context-2d-measureText">measureText</a>(in DOMString text);
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-stroketext" title="dom-context-2d-strokeText">strokeText</a>(in DOMString text, in float x, in float y, optional in float maxWidth);<!-- v4DVT void <span title="dom-context-2d-fillVerticalText">fillVerticalText</span>(in DOMString text, in float x, in float y, optional in float maxHeight);
          void <span title="dom-context-2d-strokeVerticalText">strokeVerticalText</span>(in DOMString text, in float x, in float y, optional in float maxHeight); -->

  // drawing images 
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-drawimage" title="dom-context-2d-drawImage">drawImage</a>(in <a href="http://www.w3.org/TR/html5/text-level-semantics.html#htmlimageelement">HTMLImageElement</a> image, in float dx, in float dy, optional in float dw, in float dh);
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-drawimage" title="dom-context-2d-drawImage">drawImage</a>(in <a href="http://www.w3.org/TR/html5/text-level-semantics.html#htmlimageelement">HTMLImageElement</a> image, in float sx, in float sy, in float sw, in float sh, in float dx, in float dy, in float dw, in float dh);
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-drawimage" title="dom-context-2d-drawImage">drawImage</a>(in <a href="http://www.w3.org/TR/html5/the-canvas-element.html#htmlcanvaselement">HTMLCanvasElement</a> image, in float dx, in float dy, optional in float dw, in float dh);
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-drawimage" title="dom-context-2d-drawImage">drawImage</a>(in <a href="http://www.w3.org/TR/html5/the-canvas-element.html#htmlcanvaselement">HTMLCanvasElement</a> image, in float sx, in float sy, in float sw, in float sh, in float dx, in float dy, in float dw, in float dh);
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-drawimage" title="dom-context-2d-drawImage">drawImage</a>(in <a href="http://dev.w3.org/html5/spec/video.html#htmlvideoelement">HTMLVideoElement</a> image, in float dx, in float dy, optional in float dw, in float dh);
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-drawimage" title="dom-context-2d-drawImage">drawImage</a>(in <a href="http://dev.w3.org/html5/spec/video.html#htmlvideoelement">HTMLVideoElement</a> image, in float sx, in float sy, in float sw, in float sh, in float dx, in float dy, in float dw, in float dh);

  // pixel manipulation
  <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a> <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-createimagedata" title="dom-context-2d-createImageData">createImageData</a>(in float sw, in float sh);
  <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a> <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-createimagedata" title="dom-context-2d-createImageData">createImageData</a>(in <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a> imagedata);
  <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a> <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-getimagedata" title="dom-context-2d-getImageData">getImageData</a>(in float sx, in float sy, in float sw, in float sh);
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-putimagedata" title="dom-context-2d-putImageData">putImageData</a>(in <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a> imagedata, in float dx, in float dy, optional in float dirtyX, in float dirtyY, in float dirtyWidth, in float dirtyHeight);
};

interface <dfn id="canvasgradient">CanvasGradient</dfn> {
  // opaque object 
  void <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-canvasgradient-addcolorstop" title="dom-canvasgradient-addColorStop">addColorStop</a>(in float offset, in DOMString color);
};

interface <dfn id="canvaspattern">CanvasPattern</dfn> {
  // opaque object
};

interface <dfn id="textmetrics">TextMetrics</dfn> {
  readonly attribute float <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-textmetrics-width" title="dom-textmetrics-width">width</a>;
};

interface <dfn id="imagedata">ImageData</dfn> {
  readonly attribute <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspixelarray">CanvasPixelArray</a> <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-imagedata-data" title="dom-imagedata-data">data</a>;
  readonly attribute unsigned long <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-imagedata-height" title="dom-imagedata-height">height</a>;
  readonly attribute unsigned long <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-imagedata-width" title="dom-imagedata-width">width</a>;
};

interface <dfn id="canvaspixelarray">CanvasPixelArray</dfn> {
  readonly attribute unsigned long <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-canvaspixelarray-length" title="dom-canvaspixelarray-length">length</a>;
  <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-canvaspixelarray-get" title="dom-CanvasPixelArray-get">getter</a> octet (in unsigned long index);
  <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-canvaspixelarray-set" title="dom-CanvasPixelArray-set">setter</a> void (in unsigned long index, in octet value);
};</pre>
      <dl class="domintro">
        <dt><var title="">context</var> . <code title="dom-context-2d-canvas"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-canvas">canvas</a></code></dt>
        <dd>
          <p>Returns the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a>.</p>
        </dd>
      </dl>
      <div class="impl">
        <p>The <dfn id="dom-context-2d-canvas" title="dom-context-2d-canvas"><code>canvas</code></dfn>
          attribute must return the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> that the context paints on.</p>
        <p>Unless otherwise stated, for the <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvasrenderingcontext2d">CanvasRenderingContext2D</a></code> interface, any method call with a numeric argument whose value is infinite or a NaN value must be ignored.</p>
<!--
           Philip Taylor wrote:
           > My experience with some 3d canvas code is that infinities come up in
           > naturally harmless places, e.g. having a function that scales by x then
           > translates by 1/x and wanting it to work when x=0 (which ought to draw
           > nothing, since anything it draws is zero pixels wide), and it's a bit
           > annoying to track down and fix those issues, so I'd probably like it if
           > they were harmless in canvas methods. Opera appears to silently not draw
           > anything if the transformation matrix is not finite, but Firefox throws
           > exceptions when passing in non-finite arguments.
          -->
        <p>Whenever the CSS value <code title="">currentColor</code> is used as 
		a color in this API, for the purposes of determining the computed value 
		of the <code title="">currentColor</code> keyword, the "computed value 
		of the 'color' property"&nbsp; is the computed value of the
          'color' property on the element in question at the time that the color is specified. 
		For example, the time the color is specified is when the appropriate attribute is set, or when the method is called; not when the color is rendered or otherwise used. If the computed value of the 'color' property is undefined for a particular case (such 
		as because the element is not
          <a href="http://dev.w3.org/html5/spec/infrastructure.html#in-a-document">in a <code>Document</code></a>), then the "computed value of the 'color' property" for the purposes of determining the computed value of the <code title="">currentColor</code> keyword is fully opaque black. <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#refsCSSCOLOR">[CSSCOLOR]</a></p>
      </div>
      
      
      <h3 id="the-canvas-state"><span class="secno">3.1 </span>The canvas state</h3>
      <p>Each context maintains a stack of drawing states. <dfn id="drawing-state" title="drawing state">Drawing states</dfn> consist of:</p>
      <ul class="brief">
        <li>The current <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#transformations" title="dom-context-2d-transformation">transformation matrix</a>.</li>
        <li>The current <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#clipping-region">clipping region</a>.</li>
        <li>The current values of the following attributes: 
          <code title="dom-context-2d-fillStyle"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-fillstyle">fillStyle</a></code>, 
          <code title="dom-context-2d-font"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-font">font</a></code>, 
          <code title="dom-context-2d-globalAlpha"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalalpha">globalAlpha</a></code>, 
          <code title="dom-context-2d-globalCompositeOperation"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalcompositeoperation">globalCompositeOperation</a></code>, 
          <code title="dom-context-2d-lineCap"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-linecap">lineCap</a></code>, 
          <code title="dom-context-2d-lineJoin"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-linejoin">lineJoin</a></code>, 
          <code title="dom-context-2d-lineWidth"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-linewidth">lineWidth</a></code>, 
          <code title="dom-context-2d-miterLimit"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-miterlimit">miterLimit</a></code>, 
          <code title="dom-context-2d-shadowBlur"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowblur">shadowBlur</a></code>, 
          <code title="dom-context-2d-shadowColor"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowcolor">shadowColor</a></code>, 
          <code title="dom-context-2d-shadowOffsetX"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowoffsetx">shadowOffsetX</a></code>, 
          <code title="dom-context-2d-shadowOffsetY"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowoffsety">shadowOffsetY</a></code>, 
          <code title="dom-context-2d-strokeStyle"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-strokestyle">strokeStyle</a></code>, 
          <code title="dom-context-2d-textAlign"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textalign">textAlign</a></code>, 
          <code title="dom-context-2d-textBaseline"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline">textBaseline</a></code>.</li>
      </ul>
      <p class="note">The current path and the current bitmap are not part of the drawing state. The current path is persistent, and can only be reset 
	  by using the <code title="dom-context-2d-beginPath"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-beginpath">beginPath()</a></code> method. The current bitmap is a property of the canvas, not the context.</p>
      <dl class="domintro">
        <dt><var title="">context</var> . <code title="dom-context-2d-restore"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-restore">restore</a></code>()</dt>
        <dd>
          <p>Pops the top state on the stack, restoring the context to that state.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-save"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-save">save</a></code>()</dt>
        <dd>
          <p>Pushes the current state onto the stack.</p>
        </dd>
      </dl>
      <div class="impl">
        <p>The <dfn id="dom-context-2d-restore" title="dom-context-2d-restore"><code>restore()</code></dfn> method must pop the top entry in the drawing state stack, and reset the drawing state it describes. If there is no saved state, the method must do nothing.</p>
        <p>The <dfn id="dom-context-2d-save" title="dom-context-2d-save"><code>save()</code></dfn>
          method must push a copy of the current drawing state onto the drawing state stack.</p>
<!-- v4 idea from Mihai:
        > 5. Drawing states should be saveable with IDs, and for easier restoring.
        >
        > save(id)
        > restore(id)
        >
        > If id is not provided, then save() works as defined now. The same for
        > restore().
        >
        > Currently, it's not trivial to save and restore a specific state.
        ...and from Philip:
        > I think a more convenient syntax would be:
        >   var state = ctx.save();
        >   ctx.restore(state);
        > But how would it interact with normal calls to ctx.restore()?
          -->
      </div>
      
      
      <h3 id="transformations">
        <span class="secno">3.2 </span>
        <dfn title="dom-context-2d-transformation">Transformations</dfn>
      </h3>
      <p>The transformation matrix is applied to coordinates when creating shapes and paths.</p>
<!-- conformance criteria for actual drawing are described in the various sections below -->
      <div class="impl">
        <p>When the context is created, the transformation matrix must initially be the identity transform. It may then be adjusted using the transformation methods.</p>
        <p>The transformations must be performed in reverse order. For instance, if a 
		<code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-scale" title="dom-context-2d-scale">scale</a></code> transformation that doubles the width is applied, followed by a 
		<code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-rotate" title="dom-context-2d-rotate">rotate</a></code> transformation that rotates drawing operations by a quarter turn, and a rectangle twice as wide as it is tall is then drawn on the canvas, the actual result will be a square.</p>
      </div>
      <dl class="domintro">
        <dt><var title="">context</var> . <code title="dom-context-2d-rotate"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-rotate">rotate</a></code>(<var title="">angle</var>)</dt>
        <dd>
          <p>Changes the transformation matrix to apply a rotation transformation with the given characteristics.</p>
        </dd>        
        <dt><var title="">context</var> . <code title="dom-context-2d-scale"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-scale">scale</a></code>(<var title="">x</var>, <var title="">y</var>)</dt>
        <dd>
          <p>Changes the transformation matrix to apply a scaling transformation with the given characteristics.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-setTransform"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-settransform">setTransform</a></code>(<var title="">m11</var>, <var title="">m12</var>, <var title="">m21</var>, <var title="">m22</var>, <var title="">dx</var>, <var title="">dy</var>)</dt>
        <dd>
          <p>Changes the transformation matrix <em>to</em> the matrix given by the arguments as described below.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-transform"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-transform">transform</a></code>(<var title="">m11</var>, <var title="">m12</var>, <var title="">m21</var>, <var title="">m22</var>, <var title="">dx</var>, <var title="">dy</var>)</dt>
        <dd>
          <p>Changes the transformation matrix to apply the matrix given by the arguments as described below.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-translate"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-translate">translate</a></code>(<var title="">x</var>, <var title="">y</var>)</dt>
        <dd>
          <p>Changes the transformation matrix to apply a translation transformation with the given characteristics.</p>
        </dd>
      </dl>
      <div class="impl">
        <p>The <dfn id="dom-context-2d-rotate" title="dom-context-2d-rotate"><code>rotate(<var title="">angle</var>)</code></dfn> method must add the rotation transformation described by the argument to the transformation matrix. The <var title="">angle</var> argument represents a clockwise rotation angle expressed in radians.</p>
        <p>The <dfn id="dom-context-2d-scale" title="dom-context-2d-scale"><code>scale(<var title="">x</var>, <var title="">y</var>)</code></dfn> method must add the scaling transformation described by the arguments to the transformation matrix. The <var title="">x</var> argument represents the scale factor in the horizontal direction and the <var title="">y</var> argument represents the scale factor in the vertical direction. The factors are multiples.</p>
        <p>The <dfn id="dom-context-2d-settransform" title="dom-context-2d-setTransform"><code>setTransform(<var title="">m11</var>, <var title="">m12</var>, <var title="">m21</var>, <var title="">m22</var>, <var title="">dx</var>,
          <var title="">dy</var>)</code></dfn> method must reset the current transform to the identity matrix 
		(it should not change the image). To transform the image, invoke the <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-transform" title="dom-context-2d-transform">transform</a>(<var title="">m11</var>, <var title="">m12</var>, <var title="">m21</var>, <var title="">m22</var>, <var title="">dx</var>,
          <var title="">dy</var>)</code> method with the appropriate arguments.</p>
        <p>The <dfn id="dom-context-2d-transform" title="dom-context-2d-transform"><code>transform(<var title="">m11</var>, <var title="">m12</var>, <var title="">m21</var>, <var title="">m22</var>, <var title="">dx</var>,
          <var title="">dy</var>)</code></dfn> method must multiply the current transformation matrix with the matrix described by:</p>
      </div>
      <table class="matrix">
        <tbody><tr>
          <td>
            <var title="">m11</var>
          </td>
          <td>
            <var title="">m21</var>
          </td>
          <td>
            <var title="">dx</var>
          </td>
        </tr>
        <tr>
          <td>
            <var title="">m12</var>
          </td>
          <td>
            <var title="">m22</var>
          </td>
          <td>
            <var title="">dy</var>
          </td>
        </tr>
        <tr>
          <td>0</td>
          <td>0</td>
          <td>1</td>
        </tr>
      </tbody></table>
        <p>The <dfn id="dom-context-2d-translate" title="dom-context-2d-translate"><code>translate(<var title="">x</var>, <var title="">y</var>)</code></dfn> method must add the translation transformation described by the arguments to the transformation matrix. The <var title="">x</var> argument represents the translation distance in the horizontal direction and the <var title="">y</var> argument represents the translation distance in the vertical direction. The arguments are in coordinate space units.</p>
      <div class="impl">
      </div>
      
      <h3 id="compositing"><span class="secno">3.3 </span>Compositing</h3>
      <dl class="domintro">
        <dt><var title="">context</var> . <code title="dom-context-2d-globalAlpha"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalalpha">globalAlpha</a></code> [ = <var title="">value</var> ]</dt>
        <dd>
          <p>Returns the current alpha value applied to rendering operations.</p>
          <p>Can be set, to change the alpha value. Values outside of the range from 0.0 to 1.0 are ignored.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-globalCompositeOperation"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalcompositeoperation">globalCompositeOperation</a></code> [ = <var title="">value</var> ]</dt>
        <dd>
          <p>Returns the current composition operation, from the list below.</p>
          <p>Can be set, to change the composition operation. Unknown values are ignored.</p>
        </dd>
      </dl>
      <div class="impl">
        <p>All drawing operations are affected by the global compositing attributes, <code title="dom-context-2d-globalAlpha"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalalpha">globalAlpha</a></code> and <code title="dom-context-2d-globalCompositeOperation"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalcompositeoperation">globalCompositeOperation</a></code>.</p>
<!-- conformance criteria for painting are described in the "drawing model" section below -->
        <p>The <dfn id="dom-context-2d-globalalpha" title="dom-context-2d-globalAlpha"><code>globalAlpha</code></dfn>
          attribute gives an alpha value that is applied to shapes and images before they are composited onto the canvas. The value must be in the range from 0.0 (fully transparent) to 1.0 (no additional transparency). If an attempt is made to set the attribute to a value outside this range, including 
		a value set to infinity or not a number (NaN), the attribute must retain its previous value. When the context is created, the <code title="dom-context-2d-globalAlpha"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalalpha">globalAlpha</a></code> attribute must initially have the value 1.0.</p>
        <p>The <dfn id="dom-context-2d-globalcompositeoperation" title="dom-context-2d-globalCompositeOperation"><code>globalCompositeOperation</code></dfn>
          attribute sets how shapes and images are drawn onto the existing bitmap, once they have had <code title="dom-context-2d-globalAlpha"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalalpha">globalAlpha</a></code> and the current transformation matrix applied. It must be set to a value from the following list. In the descriptions 
		that follow, the source image, <var title="">A</var>, is the shape or image being rendered,
          and the destination image, <var title="">B</var>, is the current state of the bitmap.</p>
      </div>
      <dl>
        <dt>
          <dfn id="gcop-copy" title="gcop-copy">
            <code>copy</code>
          </dfn>
        </dt>
        <dd><var title="">A</var> (<var title="">B</var> is ignored). Display the source image instead of the destination image.</dd>
        <dt>
          <dfn id="gcop-destination-atop" title="gcop-destination-atop">
            <code>destination-atop</code>
          </dfn>
        </dt>
        <dd><var title="">B</var> atop <var title="">A</var>. Display the destination image wherever both images are opaque. Display the source image wherever the source image is opaque but the destination image is transparent. Display transparency elsewhere.</dd>
        <dt>
          <dfn id="gcop-destination-in" title="gcop-destination-in">
            <code>destination-in</code>
          </dfn>
        </dt>
        <dd><var title="">B</var> in <var title="">A</var>. Display the destination image wherever both the destination image and source image are opaque. Display transparency elsewhere.</dd>
        <dt>
          <dfn id="gcop-destination-out" title="gcop-destination-out">
            <code>destination-out</code>
          </dfn>
        </dt>
        <dd><var title="">B</var> out <var title="">A</var>. Display the destination image wherever the destination image is opaque and the source image is transparent. Display transparency elsewhere.</dd>
        <dt>
          <dfn id="gcop-destination-over" title="gcop-destination-over">
            <code>destination-over</code>
          </dfn>
        </dt>
        <dd><var title="">B</var> over <var title="">A</var>. Display the destination image wherever the destination image is opaque. Display the source image elsewhere.</dd>
        <dt>
          <dfn id="gcop-lighter" title="gcop-lighter">
            <code>lighter</code>
          </dfn>
        </dt>
        <dd><var title="">A</var> plus <var title="">B</var>. Display the sum of the source image and destination image, with color values approaching 1 as a limit.</dd>
        <dt>
          <dfn id="gcop-source-atop" title="gcop-source-atop">
            <code>source-atop</code>
          </dfn>
        </dt>
        <dd><var title="">A</var> atop <var title="">B</var>. Display the source image wherever both images are opaque. Display the destination image wherever the destination image is opaque but the source image is transparent. Display transparency elsewhere.</dd>
        <dt>
          <dfn id="gcop-source-in" title="gcop-source-in">
            <code>source-in</code>
          </dfn>
        </dt>
        <dd><var title="">A</var> in <var title="">B</var>. Display the source image wherever both the source image and destination image are opaque. Display transparency elsewhere.</dd>
        <dt>
          <dfn id="gcop-source-out" title="gcop-source-out">
            <code>source-out</code>
          </dfn>
        </dt>
        <dd><var title="">A</var> out <var title="">B</var>. Display the source image wherever the source image is opaque and the destination image is transparent. Display transparency elsewhere.</dd>
        <dt><dfn id="gcop-source-over" title="gcop-source-over"><code>source-over</code></dfn> (default)</dt>
        <dd><var title="">A</var> over <var title="">B</var>. Display the source image wherever the source image is opaque. Display the destination image elsewhere.</dd>
<!-- no clear definition of this operator (doesn't correspond to a PorterDuff operator)
           <dt><dfn title="gcop-darker"><code>darker</code></dfn></dt>

           <dd>Display the sum of the source image and destination image,
           with color values approaching 0 as a limit.</dd>
        -->
        <dt class="impl">
          <code><var title="">vendorName</var>-<var title="">operationName</var></code>
        </dt>
        <dd class="impl">Vendor-specific extensions to the list of composition operators should use this syntax.</dd>
        <dt>
          <dfn id="gcop-xor" title="gcop-xor">
            <code>xor</code>
          </dfn>
        </dt>
        <dd><var title="">A</var> xor <var title="">B</var>. Exclusive OR of the source image and destination image.</dd>
      </dl>
      <div class="impl">
        <p>These values are all case-sensitive and must be used exactly as shown. User agents must not recognize values that are not a <a href="http://dev.w3.org/html5/spec/infrastructure.html#case-sensitive">case-sensitive</a> match for one of the values given above.</p>
        <p>The operators in the previous list must be treated as described by the Porter-Duff operator given at the start of their description
          (e.g. <var title="">A</var> over <var title="">B</var>). <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#refsPORTERDUFF">[PORTERDUFF]</a></p>
        <p>On setting, if the user agent does not recognize the specified value, 
		the value must be ignored, leaving the value of <code title="dom-context-2d-globalCompositeOperation"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalcompositeoperation">globalCompositeOperation</a></code>
          unaffected.</p>
        <p>When the context is created, the <code title="dom-context-2d-globalCompositeOperation"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalcompositeoperation">globalCompositeOperation</a></code>
          attribute must initially have the value
          <code>source-over</code>.</p>
      </div>
      
      
      <h3 id="colors-and-styles"><span class="secno">3.4 </span>Colors and styles</h3>
      <dl class="domintro">
        <dt><var title="">context</var> . <code title="dom-context-2d-fillStyle"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-fillstyle">fillStyle</a></code> [ = <var title="">value</var> ]</dt>
        <dd>
          <p>Returns the current style used for filling shapes.</p>
          <p>Can be set, to change the fill style.</p>
          <p>The style can be either a string containing a CSS color, or a
            <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvasgradient">CanvasGradient</a></code> or <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspattern">CanvasPattern</a></code>
            object. Invalid values are ignored.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-strokeStyle"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-strokestyle">strokeStyle</a></code> [ = <var title="">value</var> ]</dt>
        <dd>
          <p>Returns the current style used for the stroke of the shapes.</p>
          <p>Can be set, to change the stroke style.</p>
          <p>The style can be either a string containing a CSS color, or a
            <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvasgradient">CanvasGradient</a></code> or <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspattern">CanvasPattern</a></code>
            object. Invalid values are ignored.</p>
        </dd>
      </dl>
      <div class="impl">
<!-- v4 feature requests:

           * Getting and setting colours by component to bypass the CSS value parsing.

             Either:
                context.fillStyle.red += 1;

             Or:
                var array = context.fillStyle;
                array[1] += 1;
                context.fillStyle = array;

           * A more performant way of setting colours in general, e.g.:

               context.setFillColor(r,g,b,a) // already supported by webkit Or:

               context.fillStyle = 0xRRGGBBAA; // set a 32bit int directly

           * fill rule for deciding between winding and even-odd algorithms.
             SVG has fill-rule: nonzero | evenodd http://www.w3.org/TR/SVG/painting.html#FillProperties

          -->
        <p>The <dfn id="dom-context-2d-strokestyle" title="dom-context-2d-strokeStyle"><code>strokeStyle</code></dfn>
          attribute represents the color or style to use for the lines around shapes, and the <dfn id="dom-context-2d-fillstyle" title="dom-context-2d-fillStyle"><code>fillStyle</code></dfn>
          attribute represents the color or style to use inside the shapes.</p>
        <p>Both attributes can be either strings,
          <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvasgradient">CanvasGradient</a></code> objects, or <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspattern">CanvasPattern</a></code> objects. On setting, strings must be parsed as CSS &lt;color&gt; values and the color assigned, and <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvasgradient">CanvasGradient</a></code> and
          <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspattern">CanvasPattern</a></code> objects must be assigned themselves. <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#refsCSSCOLOR">[CSSCOLOR]</a> If the value is a string but is not a valid color, or is neither a string, a
          <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvasgradient">CanvasGradient</a></code>, nor a <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspattern">CanvasPattern</a></code>, then 
		the value must be ignored, and the attribute must retain its previous value.</p>
        <p>On getting, if the value is a color, then the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#serialization-of-a-color" title="serialization of a color">serialization of the color</a>
          must be returned. Otherwise, if it is not a color but a
          <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvasgradient">CanvasGradient</a></code> or <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspattern">CanvasPattern</a></code>, then the respective object must be returned. (Such objects are opaque and therefore only useful for assigning to other attributes or for comparison to other gradients or patterns.)</p>
        <p>The <dfn id="serialization-of-a-color">serialization of a color</dfn> for a color value is a string, computed as follows:</p> 
           <ul>
             <li>If the value has an alpha equal to 1.0, then the string is a lowercase six-digit hex value, with the digits being in the range 0-9 or a-f (U+0030 to U+0039 and U+0061 to U+0066), as follows:</li> 
               <ul>
                 <li>The string is prefixed with a "#" character (U+0023 NUMBER SIGN), then</li>
                 <li>the first two digits represent the red component,</li>
                 <li>the next two digits represent the green component, and</li>
                 <li>the last two digits represent the blue component.</li> 
                </ul>
              <li>Otherwise, the color value has alpha less than 1.0, and the string is the color value in the CSS <code title="">rgba()</code> functional-notation format, as follows:</li>
                <ul>
                	<li>The string is prefixed with the literal string <code title="">rgba</code> (U+0072 U+0067 U+0062 U+0061), then</li>
                  <li>a U+0028 LEFT PARENTHESIS,</li>
                  <li>a base-ten integer in the range 0-255 representing the red component (using digits 0-9, U+0030 to U+0039, in the shortest form possible),</li> 
                  <li>a literal U+002C COMMA and U+0020 SPACE,</li> 
                  <li>a base-ten integer in the range 0-255 representing the green component (using digits 0-9, U+0030 to U+0039, in the shortest form possible),</li> 
                  <li>a literal U+002C COMMA and U+0020 SPACE,</li>
                  <li>a base-ten integer in the range 0-255 representing the blue component (using digits 0-9, U+0030 to U+0039, in the shortest form possible),</li> 
                  <li>a literal U+002C COMMA and U+0020 SPACE,</li>  
                  <li>a U+0030 DIGIT ZERO,</li> 
                  <li>a U+002E FULL STOP (representing the decimal point),</li>
                  <li>one or more digits in the range 0-9 (U+0030 to U+0039) representing the fractional part of the alpha value, and</li> 
                  <li>a U+0029 RIGHT PARENTHESIS.</li> 
              </ul>  
           </ul>
          <p>When the context is created, the <code title="dom-context-2d-strokeStyle"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-strokestyle">strokeStyle</a></code> and <code title="dom-context-2d-fillStyle"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-fillstyle">fillStyle</a></code> attributes must initially have the string value <code title="">#000000</code>.</p>
      </div>
      <hr>
      <p>There are two types of gradients, linear gradients and radial gradients, both represented by objects implementing the opaque
          <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvasgradient">CanvasGradient</a></code> interface.</p>
      <p id="interpolation">Once a gradient has been created by <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-createlineargradient"><code>createLinearGradient()</code></a> or <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-createradialgradient"><code>createRadialGranient()</code></a>,
          stops are placed along it to define how the colors are distributed along the gradient. <span class="impl">The color of the gradient at each stop is the color specified for that stop. Between each such stop, the colors and the alpha component must be linearly interpolated over the RGBA space without premultiplying the alpha value to find the color to use at that offset. Before the first stop, the color must be the color of the first stop. After the last stop, the color must be the color of the last stop. When there are no stops, the gradient is transparent black.</span></p>
      <dl class="domintro">
        <dt><var title="">gradient</var> . <code title="dom-canvasgradient-addColorStop"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-canvasgradient-addcolorstop">addColorStop</a></code>(<var title="">offset</var>, <var title="">color</var>)</dt>
        <dd>
          <p>Adds a color stop with the given color to the gradient at the given offset. 0.0 is the offset at one end of the gradient, 1.0 is the offset at the other end.</p>
			<p>If the offset is out of range, throws an <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#index_size_err">INDEX_SIZE_ERR</a></code> exception. </p>
			<p>If the color cannot be parsed, throws a <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#syntax_err">SYNTAX_ERR</a></code> exception.</p>
</dd>
        <dt><var title="">gradient</var> = <var title="">context</var> . <code title="dom-context-2d-createLinearGradient"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-createlineargradient">createLinearGradient</a></code>(<var title="">x0</var>, <var title="">y0</var>, <var title="">x1</var>, <var title="">y1</var>)</dt>
        <dd>
          <p>Returns a <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvasgradient">CanvasGradient</a></code> object that represents a linear gradient that paints along the line given by the coordinates represented by the arguments.</p>
          <p>If any of the arguments are not finite numbers, throws a
            <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#not_supported_err">NOT_SUPPORTED_ERR</a></code> exception 
		  .</p>
        </dd>
        <dt><var title="">gradient</var> = <var title="">context</var> . <code title="dom-context-2d-createRadialGradient"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-createradialgradient">createRadialGradient</a></code>(<var title="">x0</var>, <var title="">y0</var>, <var title="">r0</var>, <var title="">x1</var>, <var title="">y1</var>, <var title="">r1</var>)</dt>
        <dd>
          <p>Returns a <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvasgradient">CanvasGradient</a></code> object that represents a radial gradient that paints along the cone given by the circles represented by the arguments.</p>
          <p>If any of the arguments are not finite numbers, throws a
            <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#not_supported_err">NOT_SUPPORTED_ERR</a></code> exception 
		  .</p>
			<p>&nbsp;If either of the radii are negative, throws an <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#index_size_err">INDEX_SIZE_ERR</a></code> exception.</p>
        </dd>
      </dl>
      <div class="impl">
        <p>The <dfn id="dom-canvasgradient-addcolorstop" title="dom-canvasgradient-addColorStop"><code>addColorStop(<var title="">offset</var>, <var title="">color</var>)</code></dfn>
          method on the <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvasgradient">CanvasGradient</a></code> 
		interface adds a new stop to a gradient. If <var title="">offset</var> is less than 0,
          greater than 1, infinite, or NaN, then an
          <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#index_size_err">INDEX_SIZE_ERR</a></code> 
		exception must be raised. If <var title="">color</var> 
		cannot be parsed as a CSS color, then a
          <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#syntax_err">SYNTAX_ERR</a></code> exception must be raised. Otherwise, the gradient must have a new stop placed, at offset <var title="">offset</var> relative to the whole gradient, and with the color obtained by parsing <var title="">color</var> as a CSS
          &lt;color&gt; value <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#refsCSSCOLOR">[CSSCOLOR]</a>. If multiple stops are added at the same offset on a gradient, they must be placed in the order added, with the first one closest to the start of the gradient, and each subsequent one infinitesimally further along towards the end point (in effect causing all but the first and last stop added at each point to be ignored).</p>
        <p>The <dfn id="dom-context-2d-createlineargradient" title="dom-context-2d-createLinearGradient"><code>createLinearGradient(<var title="">x0</var>, <var title="">y0</var>, <var title="">x1</var>,
          <var title="">y1</var>)</code></dfn> method takes four arguments that represent the start point (<var title="">x0</var>, <var title="">y0</var>) and end point (<var title="">x1</var>, <var title="">y1</var>) of the gradient. If any of the arguments to <code title="dom-context-2d-createLinearGradient"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-createlineargradient">createLinearGradient()</a></code>
          are infinite or NaN, the method must raise a
          <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#not_supported_err">NOT_SUPPORTED_ERR</a></code> exception. Otherwise, the method must return a linear <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvasgradient">CanvasGradient</a></code> initialized with the specified line.</p>
        <p>Linear gradients must be rendered such that all points on a line perpendicular to the line that crosses the start and end points have the color at the point where those two lines cross (with the colors coming from the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#interpolation">interpolation and extrapolation</a> described above). The points in the linear gradient must be transformed as described by the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#transformations" title="dom-context-2d-transformation">current transformation matrix</a> when rendering.</p>
        <p>If <span title=""><var title="">x0</var>&nbsp;=&nbsp;<var title="">x1</var></span> and <span title=""><var title="">y0</var>&nbsp;=&nbsp;<var title="">y1</var></span>, then the linear gradient must paint nothing.</p>
        <p>The <dfn id="dom-context-2d-createradialgradient" title="dom-context-2d-createRadialGradient"><code>createRadialGradient(<var title="">x0</var>, <var title="">y0</var>, <var title="">r0</var>,
          <var title="">x1</var>, <var title="">y1</var>, <var title="">r1</var>)</code></dfn> method takes six arguments, the first three representing the start circle with origin (<var title="">x0</var>, <var title="">y0</var>) and radius <var title="">r0</var>, and the last three representing the end circle with origin (<var title="">x1</var>, <var title="">y1</var>) and radius <var title="">r1</var>. The values are in coordinate space units. If any of the arguments are infinite or NaN, a
          <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#not_supported_err">NOT_SUPPORTED_ERR</a></code> exception must be raised. If either of <var title="">r0</var> or <var title="">r1</var> are negative, an
          <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#index_size_err">INDEX_SIZE_ERR</a></code> exception must be raised. Otherwise,
          the method must return a radial <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvasgradient">CanvasGradient</a></code>
          initialized with the two specified circles.</p>
        <p>Radial gradients must be rendered by following these steps:</p>
        <ol>
          <li>
            <p>If <span title=""><var title="">x<sub>0</sub></var>&nbsp;=&nbsp;<var title="">x<sub>1</sub></var></span> and <span title=""><var title="">y<sub>0</sub></var>&nbsp;=&nbsp;<var title="">y<sub>1</sub></var></span> and <span title=""><var title="">r<sub>0</sub></var>&nbsp;=&nbsp;<var title="">r<sub>1</sub></var></span>, then the radial gradient must paint nothing. Abort these steps.</p>
          </li>
          <li>
            <p>Let <span>x(<var title="">ω</var>)&nbsp;=&nbsp;(<var title="">x<sub>1</sub></var>-<var title="">x<sub>0</sub></var>)<var title="">ω</var>&nbsp;+&nbsp;<var title="">x<sub>0</sub></var></span></p>
            <p>Let <span>y(<var title="">ω</var>)&nbsp;=&nbsp;(<var title="">y<sub>1</sub></var>-<var title="">y<sub>0</sub></var>)<var title="">ω</var>&nbsp;+&nbsp;<var title="">y<sub>0</sub></var></span></p>
            <p>Let <span>r(<var title="">ω</var>)&nbsp;=&nbsp;(<var title="">r<sub>1</sub></var>-<var title="">r<sub>0</sub></var>)<var title="">ω</var>&nbsp;+&nbsp;<var title="">r<sub>0</sub></var></span></p>
            <p>Let the color at <var title="">ω</var> be the color at that position on the gradient (with the colors coming from the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#interpolation">interpolation and extrapolation</a>
            described above).</p>
          </li>
          <li>
            <p>For all values of <var title="">ω</var> where
           <span>r(<var title="">ω</var>)&nbsp;&gt;&nbsp;0</span>,
           starting with the value of <var title="">ω</var> nearest to positive infinity and ending with the value of <var title="">ω</var> nearest to negative infinity, draw the circumference of the circle with radius <span>r(<var title="">ω</var>)</span> at position (<span>x(<var title="">ω</var>)</span>, <span>y(<var title="">ω</var>)</span>), with the color at <var title="">ω</var>, but only painting on the parts of the canvas that have not yet been painted on by earlier circles in this step for this rendering of the gradient.</p>
          </li>
        </ol>
        <p class="note">This effectively creates a cone, touched by the two circles defined in the creation of the gradient, with the part of the cone before the start circle (0.0) using the color of the first offset, the part of the cone after the end circle (1.0) using the color of the last offset, and areas outside the cone untouched by the gradient (transparent black).</p>
        <p>Gradients must be painted only where the relevant stroking or filling effects requires that they be drawn.</p>
        <p>The points in the radial gradient must be transformed as described by the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#transformations" title="dom-context-2d-transformation">current transformation matrix</a> when rendering.</p>
<!--
          <p>Support for actually painting gradients is optional. Instead of painting the gradients, user agents may instead just paint the first stop's color. However, <code title="dom-context-2d-createLinearGradient">createLinearGradient()</code>
          and <code title="dom-context-2d-createRadialGradient">createRadialGradient()</code>
          must always return objects when passed valid arguments.</p>
        -->
      </div>
      <hr>
      <p>Patterns are represented by objects implementing the opaque
          <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspattern">CanvasPattern</a></code> interface.</p>
      <dl class="domintro">
        <dt><var title="">pattern</var> = <var title="">context</var> . <code title="dom-context-2d-createPattern"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-createpattern">createPattern</a></code>(<var title="">image</var>, <var title="">repetition</var>)</dt>
        <dd>
          <p>Returns a <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspattern">CanvasPattern</a></code> object that uses the given image and repeats in the direction(s) given by the <var title="">repetition</var> argument.</p>
          <p>The allowed values for <code title="">repetition</code> are <code title="">repeat</code> (both directions), <code title="">repeat-x</code> (horizontal only), <code title="">repeat-y</code> (vertical only), and <code title="">no-repeat</code> (neither). If the <var title="">repetition</var> argument is empty or null, the value
            <code title="">repeat</code> is used.</p>
		  <p>If the first argument is not an <code><a href="http://www.w3.org/TR/html5/text-level-semantics.html#the-img-element">
		  img</a></code>,             <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a>, 
		  or <code><a href="http://dev.w3.org/html5/spec/video.html#video">video</a></code>  
		  element, throws a 
            <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#type_mismatch_err">TYPE_MISMATCH_ERR</a></code> exception. </p> 
			<p>If the image is not fully decoded yet or has no image data, 
			throws an           <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#invalid_state_err">INVALID_STATE_ERR</a></code> 
 
			exception. </p>
			<p>If the second argument is not one of the allowed values, throws a <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#syntax_err">SYNTAX_ERR</a></code>
 
			exception.</p>
	   </dd>
      </dl>
      <div class="impl">
        <p>To create objects of this type, the <dfn id="dom-context-2d-createpattern" title="dom-context-2d-createPattern"><code>createPattern(<var title="">image</var>, <var title="">repetition</var>)</code></dfn>
          method is used. The first argument gives the image to use as the pattern (either an <code><a href="http://www.w3.org/TR/html5/text-level-semantics.html#htmlimageelement">HTMLImageElement</a></code> or an
          <code><a href="http://www.w3.org/TR/html5/the-canvas-element.html#htmlcanvaselement">HTMLCanvasElement</a></code>). Modifying this image after calling the <code title="dom-context-2d-createPattern"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-createpattern">createPattern()</a></code> method must not affect the pattern. The second argument must be a string with one of the following values: 
          </p><ul>
           <li><code title="">repeat</code></li>
           <li><code title="">repeat-x</code> </li>
           <li><code title="">repeat-y</code></li>
           <li><code title="">no-repeat</code> </li>
          </ul>
          If the empty string or null is specified, <code title="">repeat</code> must be assumed. If an unrecognized value is given, then the user agent must raise a
          <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#syntax_err">SYNTAX_ERR</a></code> exception. User agents must recognize the four values described above exactly (they must not do case folding, 
		for example). The <code title="dom-context-2d-createPattern"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-createpattern">createPattern()</a></code> method must return a <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspattern">CanvasPattern</a></code> object suitably initialized.<p></p>
        <p>The <var title="">image</var> argument is an instance of either
          <code><a href="http://www.w3.org/TR/html5/text-level-semantics.html#htmlimageelement">HTMLImageElement</a></code>, <code><a href="http://www.w3.org/TR/html5/the-canvas-element.html#htmlcanvaselement">HTMLCanvasElement</a></code>, or
          <code><a href="http://dev.w3.org/html5/spec/video.html#htmlvideoelement">HTMLVideoElement</a></code>. If the <var title="">image</var> is of the wrong type or null, the implementation must raise a
          <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#type_mismatch_err">TYPE_MISMATCH_ERR</a></code> exception.</p>
<!-- drawImage() has an equivalent paragraph -->
        <p>If the <var title="">image</var> argument is an
          <code><a href="http://www.w3.org/TR/html5/text-level-semantics.html#htmlimageelement">HTMLImageElement</a></code> object whose <code title="dom-img-complete"><a href="http://www.w3.org/TR/html5/text-level-semantics.html#dom-img-complete">complete</a></code> attribute is false, then the implementation must raise an <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#invalid_state_err">INVALID_STATE_ERR</a></code>
          exception.</p>
<!-- drawImage() has an equivalent paragraph -->
        <p>If the <var title="">image</var> argument is an
          <code><a href="http://dev.w3.org/html5/spec/video.html#htmlvideoelement">HTMLVideoElement</a></code> object whose <code title="dom-media-readyState"><a href="http://dev.w3.org/html5/spec/video.html#dom-media-readystate">readyState</a></code> attribute is either
          <code title="dom-media-HAVE_NOTHING"><a href="http://dev.w3.org/html5/spec/video.html#dom-media-have_nothing">HAVE_NOTHING</a></code> or <code title="dom-media-HAVE_METADATA"><a href="http://dev.w3.org/html5/spec/video.html#dom-media-have_metadata">HAVE_METADATA</a></code>, then the implementation must raise an <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#invalid_state_err">INVALID_STATE_ERR</a></code>
          exception.</p>
<!-- drawImage() has an equivalent paragraph -->
        <p>If the <var title="">image</var> argument is an
          <code><a href="http://www.w3.org/TR/html5/the-canvas-element.html#htmlcanvaselement">HTMLCanvasElement</a></code> object with either a horizontal dimension or a vertical dimension equal to zero, then the implementation must raise an <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#invalid_state_err">INVALID_STATE_ERR</a></code>
          exception.</p>
<!-- drawImage() has an equivalent paragraph -->
        <p>Patterns must be painted so that the top left of the first image is anchored at the origin of the coordinate space, and images are then repeated horizontally to the left and right (if the
          <code>repeat-x</code> string was specified) or vertically up and down (if the <code>repeat-y</code> string was specified) or in all four directions all over the canvas (if the <code>repeat</code>
          string was specified). The images are not scaled by this process;
          one CSS pixel of the image must be painted on one coordinate space unit. Of course, patterns must actually be painted only where the stroking or filling effect requires that they be drawn, and are affected by the current transformation matrix.</p>
        <p>When the <code title="dom-context-2d-createPattern"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-createpattern">createPattern()</a></code> method is passed an animated image as its <var title="">image</var>
          argument, the user agent must use the poster frame of the animation,
          or, if there is no poster frame, the first frame of the animation.</p>
<!-- drawImage() has an equivalent paragraph -->
        <p>When the <var title="">image</var> argument is an
          <code><a href="http://dev.w3.org/html5/spec/video.html#htmlvideoelement">HTMLVideoElement</a></code>, then the frame at the  <a href="http://dev.w3.org/html5/spec/video.html#current-playback-position">current playback position</a> must be used as the source image.</p>
<!-- drawImage() has an equivalent paragraph -->
<!--
           Requests for v4 features:
            * apply transforms to patterns, so you don't have to create transformed patterns manually by rendering them to an off-screen canvas then using that canvas as the pattern.
          -->
      </div>
      
      
      <h3 id="line-styles"><span class="secno">3.5 </span>Line styles</h3>
      <dl class="domintro">
        <dt><var title="">context</var> . <code title="dom-context-2d-lineCap"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-linecap">lineCap</a></code> [ = <var title="">value</var> ]</dt>
        <dd>
          <p>Returns the current line cap style.</p>
          <p>Can be set, to change the line cap style.</p>
          <p>The possible line cap styles are <code>butt</code>,
            <code>round</code>, and <code>square</code>. Other values are ignored.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-lineJoin"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-linejoin">lineJoin</a></code> [ = <var title="">value</var> ]</dt>
        <dd>
          <p>Returns the current line join style.</p>
          <p>Can be set, to change the line join style.</p>
          <p>The possible line join styles are <code>miter</code>, 
            <code>round</code>, and <code>bevel</code>. Other values are ignored.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-lineWidth"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-linewidth">lineWidth</a></code> [ = <var title="">value</var> ]</dt>
        <dd>
          <p>Returns the current line width.</p>
          <p>Can be set, to change the line width. </p>
			<p>Values that are not finite values greater than zero are ignored.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-miterLimit"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-miterlimit">miterLimit</a></code> [ = <var title="">value</var> ]</dt>
        <dd>
          <p>Returns the current miter limit ratio.</p>
          <p>Can be set, to change the miter limit ratio. </p>
			<p>Values that are not finite values greater than zero are ignored.</p>
        </dd>        
      </dl>
      <div class="impl">
        <p>The <dfn id="dom-context-2d-linecap" title="dom-context-2d-lineCap"><code>lineCap</code></dfn> attribute defines the type of endings that UAs will place on the end of lines. The three valid values are <code>butt</code>,
          <code>round</code>, and <code>square</code>. The <code>butt</code>
          value means that the end of each line has a flat edge perpendicular to the direction of the line (and that no additional line cap is added). The <code>round</code> value means that a semi-circle with the diameter equal to the width of the line must then be added on to the end of the line. The <code>square</code> value means that a rectangle with the length of the line width and the width of half the line width, placed flat against the edge perpendicular to the direction of the line, must be added at the end of each line. On setting, any other value than the literal strings <code>butt</code>,
          <code>round</code>, and <code>square</code> must be ignored, leaving the value unchanged.</p>
        <p>When the context is created, the <code title="dom-context-2d-lineCap"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-linecap">lineCap</a></code> attribute must initially have the value <code>butt</code>.</p>
        <p>The <dfn id="dom-context-2d-linejoin" title="dom-context-2d-lineJoin"><code>lineJoin</code></dfn>
          attribute defines the type of corners that UAs will place where two lines meet. The three valid values are <code>bevel</code>,
          <code>round</code>, and <code>miter</code>.</p>
        <p>On setting, any other value than the literal strings
          <code>bevel</code>, <code>round</code>, and <code>miter</code> must be ignored, leaving the value unchanged.</p>
        <p>When the context is created, the <code title="dom-context-2d-lineJoin"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-linejoin">lineJoin</a></code> attribute must initially have the value <code>miter</code>.</p>
        <p>A join exists at any point in a subpath shared by two consecutive lines. When a subpath is closed, then a join also exists at its first point (equivalent to its last point) connecting the first and last lines in the subpath.</p>
        <p>In addition to the point where the join occurs, two additional points are relevant to each join, one for each line: the two corners found half the line width away from the join point, one perpendicular to each line, each on the side furthest from the other line.</p>
        <p>A filled triangle connecting these two opposite corners with a straight line, with the third point of the triangle being the join point, must be rendered at all joins. The <code title="dom-context-2d-lineJoin"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-linejoin">lineJoin</a></code> attribute controls whether anything else is rendered. The three aforementioned values have the following meanings:</p>
          <ul>
            <li>The <code>bevel</code> value means that this is all that is rendered at joins.</li>
            <li>The <code>round</code> value means that a filled arc connecting the two aforementioned corners of the join, abutting (and not overlapping) the aforementioned triangle, with the diameter equal to the line width and the origin at the point of the join, must be rendered at joins.</li>
            <li>The <code>miter</code> value means that a second filled triangle must (if 
			possible, given the miter length) be rendered at the join,
          with one line being the line between the two aforementioned corners,
          abutting the first triangle, and the other two being continuations of the outside edges of the two joining lines, as long as required to intersect without going over the miter length.</li>
          </ul>
        <p>The miter length is the distance from the point where the join occurs to the intersection of the line edges on the outside of the join. The miter limit ratio is the maximum allowed ratio of the miter length to half the line width. If the miter length would cause the miter limit ratio to be exceeded, this second triangle must not be rendered.</p>
        <p>The miter limit ratio can be explicitly set using the <dfn id="dom-context-2d-miterlimit" title="dom-context-2d-miterLimit"><code>miterLimit</code></dfn>
          attribute. On setting, zero, negative, infinite, and NaN values must be ignored, leaving the value unchanged.</p>
        <p>When the context is created, the <code title="dom-context-2d-miterLimit"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-miterlimit">miterLimit</a></code> attribute must initially have the value <code>10.0</code>.</p>
        <p>The <dfn id="dom-context-2d-linewidth" title="dom-context-2d-lineWidth"><code>lineWidth</code></dfn>
          attribute gives the width of lines, in coordinate space units. On setting, zero, negative, infinite, and NaN values must be ignored,
          leaving the value unchanged.</p>
        <p>When the context is created, the <code title="dom-context-2d-lineWidth"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-linewidth">lineWidth</a></code> attribute must initially have the value <code>1.0</code>.</p>
<!-- XXX this section doesn't say what these attributes return or what they do on setting. not a big deal; it's pretty obvious. but if anyone complains, we'll have to add it -->
<!--
        v4: dashed lines have been requested. Philip Taylor provides these notes on what would need to be defined for dashed lines:
        > I don't think it's entirely trivial to add, to the detail that's
        > necessary in a specification. The common graphics APIs (at least
        > Cairo, Quartz and java.awt.Graphics, and any SVG implementation) all
        > have dashes specified by passing an array of dash lengths (alternating
        > on/off), so that should be alright as long as you define what units
        > it's measured in and what happens when you specify an odd number of
        > values and how errors are handled and what happens if you update the
        > array later. But after that, what does it do when stroking multiple
        > subpaths, in terms of offsetting the dashes? When you use strokeRect,
        > where is offset 0? Does moveTo reset the offset? How does it interact
        > with lineCap/lineJoin? All the potential issues need test cases too,
        > and the implementations need to make sure they handle any edge cases
        > that the underlying graphics library does differently. (SVG Tiny 1.2
        > appears to skip some of the problems by leaving things undefined and
        > allowing whatever behavior the graphics library has.)
          -->
      </div>
      
      
      <h3 id="shadows">
        <span class="secno">3.6 </span>
        <dfn>Shadows</dfn>
      </h3>
      <p>All drawing operations are affected by the four global shadow attributes.</p>
      <dl class="domintro">
        <dt><var title="">context</var> . <code title="dom-context-2d-shadowBlur"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowblur">shadowBlur</a></code> [ = <var title="">value</var> ]</dt>
        <dd>
          <p>Returns the current level of blur applied to shadows.</p>
          <p>Can be set, to change the blur level. Values that are not finite numbers greater than or equal to zero are ignored.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-shadowColor"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowcolor">shadowColor</a></code> [ = <var title="">value</var> ]</dt>
        <dd>
          <p>Returns the current shadow color.</p>
          <p>Can be set, to change the shadow color. Values that cannot be parsed as CSS colors are ignored.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-shadowOffsetX"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowoffsetx">shadowOffsetX</a></code> [ = <var title="">value</var> ]</dt>
        <dt><var title="">context</var> . <code title="dom-context-2d-shadowOffsetY"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowoffsety">shadowOffsetY</a></code> [ = <var title="">value</var> ]</dt>
        <dd>
          <p>Returns the current shadow offset.</p>
          <p>Can be set, to change the shadow offset. Values that are not finite numbers are ignored.</p>
        </dd>
      </dl>
      <div class="impl">
        <p>The <dfn id="dom-context-2d-shadowblur" title="dom-context-2d-shadowBlur"><code>shadowBlur</code></dfn>
          attribute specifies the size of the blurring effect. The units do not map to coordinate space units 
		and are not affected by the current transformation matrix.</p>
        <p>When the context is created, the <code title="dom-context-2d-shadowBlur"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowblur">shadowBlur</a></code> attribute must initially have the value <code>0</code>.</p>
        <p>On getting, the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowblur">shadowBlur</a> attribute must return its current value. On setting, the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowblur">shadowBlur</a> attribute must be set to the new value, except if the value is negative, infinite or NaN, in which case the new value must be ignored.</p>
        <p>The <dfn id="dom-context-2d-shadowcolor" title="dom-context-2d-shadowColor"><code>shadowColor</code></dfn>
          attribute sets the color of the shadow.</p>
        <p>When the context is created, the <code title="dom-context-2d-shadowColor"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowcolor">shadowColor</a></code> attribute initially must be fully-transparent black.</p>
        <p>On getting,  the <code title="dom-context-2d-shadowColor"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowcolor">shadowColor</a></code> attribute the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#serialization-of-a-color" title="serialization of a       color">serialization of the color</a> must be returned.</p>
        <p>On setting  the <code title="dom-context-2d-shadowColor"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowcolor">shadowColor</a></code> attribute, the new value must be parsed as a CSS &lt;color&gt;
          value and the color assigned. If the value is not a valid color,
          then it must be ignored, and the attribute must retain its previous value. <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#refsCSSCOLOR">[CSSCOLOR]</a></p>
        <p>The <dfn id="dom-context-2d-shadowoffsetx" title="dom-context-2d-shadowOffsetX"><code>shadowOffsetX</code></dfn>
          and <dfn id="dom-context-2d-shadowoffsety" title="dom-context-2d-shadowOffsetY"><code>shadowOffsetY</code></dfn>
          attributes specify the distance that the shadow will be offset in the positive horizontal and positive vertical distance respectively. Their values are in coordinate space units. They are not affected by the current transformation matrix.</p>
        <p>When the context is created, the shadow offset attributes must initially have the value <code>0</code>.</p>
        <p>On getting, the  <dfn id="dom-context-2d-shadowoffsetx" title="dom-context-2d-shadowOffsetX"><code>shadowOffsetX</code></dfn>
          and <dfn id="dom-context-2d-shadowoffsety" title="dom-context-2d-shadowOffsetY"><code>shadowOffsetY</code></dfn>
          attributes must return their current value. On setting, the attribute being set must be set to the new value, except if the value is infinite or NaN, in which case the new value must be ignored.</p>
        <p><dfn id="when-shadows-are-drawn" title="when shadows are drawn">Shadows are only drawn if</dfn> the opacity component of the alpha component of the color of <code title="dom-context-2d-shadowColor"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowcolor">shadowColor</a></code> is non-zero and either the <code title="dom-context-2d-shadowBlur"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowblur">shadowBlur</a></code> is non-zero, or the <code title="dom-context-2d-shadowOffsetX"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowoffsetx">shadowOffsetX</a></code>
          is non-zero, or the <code title="dom-context-2d-shadowOffsetY"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowoffsety">shadowOffsetY</a></code> is non-zero.</p>
        <p><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#when-shadows-are-drawn">When shadows are drawn</a>, they must be rendered as follows:</p>
        <ol>
          <li>
            <p>Let <var title="">A</var> be the source image for which a shadow is being created.</p>
          </li>
          <li>
            <p>Let <var title="">B</var> be an infinite transparent black bitmap, with a coordinate space and an origin identical to <var title="">A</var>.</p>
          </li>
          <li>
            <p>Copy the alpha channel of <var title="">A</var> to <var title="">B</var>, offset by <code title="dom-context-2d-shadowOffsetX"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowoffsetx">shadowOffsetX</a></code> in the positive <var title="">x</var> direction, and <code title="dom-context-2d-shadowOffsetY"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowoffsety">shadowOffsetY</a></code> in the positive <var title="">y</var> direction.</p>
          </li>
          <li>
            <p>If <code title="dom-context-2d-shadowBlur"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowblur">shadowBlur</a></code> is greater than 0:</p>
            <ol>
              <li>
                <p>If <code title="dom-context-2d-shadowBlur"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowblur">shadowBlur</a></code> is less than 8, let <var title="">σ</var> be half the value of <code title="dom-context-2d-shadowBlur"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowblur">shadowBlur</a></code>; otherwise,
             let <var title="">σ</var> be the square root of multiplying the value of <code title="dom-context-2d-shadowBlur"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowblur">shadowBlur</a></code> by 2.</p>
              </li>
              <li>
                <p>Perform a 2D Gaussian Blur on <var title="">B</var>,
             using <var title="">σ</var> as the standard deviation.</p>
<!-- wish i could find a reference for this -->
              </li>
            </ol>
            <p>User agents may limit values of <var title="">σ</var> to an implementation-specific maximum value to avoid exceeding hardware limitations during the Gaussian blur operation.</p>
          </li>
          <li>
            <p>Set the red, green, and blue components of every pixel in
           <var title="">B</var> to the red, green, and blue components
           (respectively) of the color of <code title="dom-context-2d-shadowColor"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowcolor">shadowColor</a></code>.</p>
          </li>
          <li>
            <p>Multiply the alpha component of every pixel in <var title="">B</var> by the alpha component of the color of <code title="dom-context-2d-shadowColor"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-shadowcolor">shadowColor</a></code>.</p>
          </li>
          <li>
            <!-- TODO: Add specific references for "below" in the folllowing sentence. -->
            <p>The shadow is in the bitmap <var title="">B</var>, and is rendered as part of the drawing model described below.</p>
          </li>
        </ol>
      </div>
      
      
      <h3 id="simple-shapes-rectangles"><span class="secno">3.7 </span>Simple shapes (rectangles)</h3>
      <p>Three methods immediately draw rectangles to the bitmap. They each take four arguments; the first two 
	  arguments give the <var title="">x</var> and <var title="">y</var> coordinates of the top left of the rectangle, and the second two 
	  arguments give the width <var title="">w</var> and height <var title="">h</var> of the rectangle,
          respectively.</p>
      <div class="impl">
        <p>The <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#transformations" title="dom-context-2d-transformation">current transformation matrix</a> must be applied to the following four coordinates, which form the path that must then be closed to get the specified rectangle: <span>(<var title="">x</var>, <var title="">y</var>)</span>, <span>(<span title=""><var title="">x</var>+<var title="">w</var></span>, <var title="">y</var>)</span>,
          <span>(<span title=""><var title="">x</var>+<var title="">w</var></span>,
          <span title=""><var title="">y</var>+<var title="">h</var></span>)</span>,
          <span>(<var title="">x</var>, <span title=""><var title="">y</var>+<var title="">h</var></span>)</span>.</p>
        <p>Shapes are painted without affecting the current path. Shapes are subject to the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#clipping-region" title="clipping region">clipping region</a>. 
		With the exception of <code title="dom-context-2d-clearRect"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-clearrect">clearRect()</a></code>, 
		shapes are also subject to <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#shadows" title="shadows">shadow effects</a>, <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalalpha" title="dom-context-2d-globalAlpha">global alpha</a>, and <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalcompositeoperation" title="dom-context-2d-globalCompositeOperation">global composition operators</a>.</p>
      </div>
      <dl class="domintro">
        <dt><var title="">context</var> . <code title="dom-context-2d-clearRect"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-clearrect">clearRect</a></code>(<var title="">x</var>, <var title="">y</var>, <var title="">w</var>, <var title="">h</var>)</dt>
        <dd>
          <p>Clears all pixels on the canvas in the given rectangle to transparent black.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-fillRect"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-fillrect">fillRect</a></code>(<var title="">x</var>, <var title="">y</var>, <var title="">w</var>, <var title="">h</var>)</dt>
        <dd>
          <p>Paints the given rectangle onto the canvas, using the current fill style.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-strokeRect"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-strokerect">strokeRect</a></code>(<var title="">x</var>, <var title="">y</var>, <var title="">w</var>, <var title="">h</var>)</dt>
        <dd>
          <p>Paints the box that outlines the given rectangle onto the canvas, using the current stroke style.</p>
        </dd>
      </dl>
      <div class="impl">
        <p>The <dfn id="dom-context-2d-clearrect" title="dom-context-2d-clearRect"><code>clearRect(<var title="">x</var>, <var title="">y</var>, <var title="">w</var>, <var title="">h</var>)</code></dfn> method must clear the pixels in the specified rectangle that also intersect the current clipping region to a fully transparent black, erasing any previous image. If either height or width are zero, this method has no effect.</p>
        <p>The <dfn id="dom-context-2d-fillrect" title="dom-context-2d-fillRect"><code>fillRect(<var title="">x</var>, <var title="">y</var>, <var title="">w</var>, <var title="">h</var>)</code></dfn> method must paint the specified rectangular area using the <code title="dom-context-2d-fillStyle"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-fillstyle">fillStyle</a></code>. If either height or width are zero, this method has no effect.</p>
        <p>The <dfn id="dom-context-2d-strokerect" title="dom-context-2d-strokeRect"><code>strokeRect(<var title="">x</var>, <var title="">y</var>, <var title="">w</var>, <var title="">h</var>)</code></dfn> method must must draw the outline of the specified rectangle's path
		using the <code title="dom-context-2d-strokeStyle"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-strokestyle">strokeStyle</a></code>, <code title="dom-context-2d-lineWidth"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-linewidth">lineWidth</a></code>, <code title="dom-context-2d-lineJoin"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-linejoin">lineJoin</a></code>, and (if appropriate) <code title="dom-context-2d-miterLimit"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-miterlimit">miterLimit</a></code> attributes. If both height and width are zero, this method has no effect, 
		because there is no path to draw the stroke over (the path is a point). If 
		either height or width is zero, the method draws a straight stroke instead (the path for the outline is just a straight line along the non-zero dimension).</p>
      </div>
      
      
      <h3 id="complex-shapes-paths"><span class="secno">3.8 </span>Complex shapes (paths)</h3>
      <p>The context always has a current path. There is only one current path, it is not part of the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#drawing-state">drawing state</a>.</p>
      <p>A <dfn id="path">path</dfn> has a list of zero or more subpaths. Each subpath consists of a list of one or more points, connected by straight or curved lines, and a flag indicating whether the subpath is closed or not. A closed subpath is one where the last point of the subpath is connected to the first point of the subpath by a straight line. Subpaths with fewer than two points are ignored when painting the path.</p>
      <dl class="domintro">
        <dt><var title="">context</var> . <code title="dom-context-2d-arc"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-arc">arc</a></code>(<var title="">x</var>, <var title="">y</var>, <var title="">radius</var>, <var title="">startAngle</var>, <var title="">endAngle</var>, <var title="">anticlockwise</var>)</dt>
        <dd>
          <p>Adds points to the subpath such that the arc described by the circumference of the circle described by the arguments—starting at the given start angle, ending at the given end angle, 
		  and going in the given direction—is added to the path, connected to the previous point by a straight line.</p>
          <p>If the given radius is negative, throws an <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#index_size_err">INDEX_SIZE_ERR</a></code> exception 
		  .</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-arcTo"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-arcto">arcTo</a></code>(<var title="">x1</var>, <var title="">y1</var>, <var title="">x2</var>, <var title="">y2</var>, <var title="">radius</var>)</dt>
        <dd>
          <p>Adds a point to the current path, connected to the previous one by a straight line, then adds a second point to the current path,
            connected to the previous one by an arc whose properties are described by the arguments.</p>
          <p>If the given radius is negative, throws an <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#index_size_err">INDEX_SIZE_ERR</a></code> exception 
		  .</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-beginPath"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-beginpath">beginPath</a></code>()</dt>
        <dd>
          <p>Resets the current path.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-bezierCurveTo"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-beziercurveto">bezierCurveTo</a></code>(<var title="">cp1x</var>, <var title="">cp1y</var>, <var title="">cp2x</var>, <var title="">cp2y</var>, <var title="">x</var>, <var title="">y</var>)</dt>
        <dd>
          <p>Adds the given point to the current path, connected to the previous one by a cubic Bézier curve with the given control points.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-clip"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-clip">clip</a></code>()</dt>
        <dd>
          <p>Further constrains the clipping region to the given path.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-closePath"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-closepath">closePath</a></code>()</dt>
        <dd>
          <p>Marks the current subpath as closed, and starts a new subpath with a point the same as the start and end of the newly closed subpath.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-fill"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-fill">fill</a></code>()</dt>
        <dd>
          <p>Fills the subpaths with the current fill style.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-lineTo"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-lineto">lineTo</a></code>(<var title="">x</var>, <var title="">y</var>)</dt>
        <dd>
          <p>Adds the given point to the current subpath, connected to the previous 
		  point by a straight line.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-moveTo"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-moveto">moveTo</a></code>(<var title="">x</var>, <var title="">y</var>)</dt>
        <dd>
          <p>Creates a new subpath with the given point as its first (and only) 
		  point.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-quadraticCurveTo"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-quadraticcurveto">quadraticCurveTo</a></code>(<var title="">cpx</var>, <var title="">cpy</var>, <var title="">x</var>, <var title="">y</var>)</dt>
        <dd>
          <p>Adds the given point to the current path, connected to the previous one by a quadratic Bézier curve with the given control point.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-rect"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-rect">rect</a></code>(<var title="">x</var>, <var title="">y</var>, <var title="">w</var>, <var title="">h</var>)</dt>
        <dd>
          <p>Adds a new closed subpath to the path, representing the given rectangle.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-stroke"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-stroke">stroke</a></code>()</dt>
        <dd>
          <p>Creates the strokes of the subpaths with the current stroke style.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-isPointInPath"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-ispointinpath">isPointInPath</a></code>(<var title="">x</var>, <var title="">y</var>)</dt>
        <dd>
          <p>Returns true if the given point is in the current path.</p>
        </dd>
      </dl>
      <div class="impl">
        <p>Initially, the context's path must have zero subpaths.</p>
        <p>The points and lines added to the path by these methods must be transformed according to the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#transformations" title="dom-context-2d-transformation">current transformation matrix</a> as they are added.</p>
        <p>The <dfn id="dom-context-2d-beginpath" title="dom-context-2d-beginPath"><code>beginPath()</code></dfn>
          method must empty the list of subpaths so that the context once again has zero subpaths.</p>
        <p>The <dfn id="dom-context-2d-moveto" title="dom-context-2d-moveTo"><code>moveTo(<var title="">x</var>, <var title="">y</var>)</code></dfn> method must create a new subpath with the specified point as its first (and only) point.</p>
        <p>When the user agent is to <dfn id="ensure-there-is-a-subpath">ensure there is a subpath</dfn>
          for a coordinate (<var title="">x</var>, <var title="">y</var>), the user agent must check to see if the context has any subpaths, and if it does not, then the user agent must create a new subpath with the point (<var title="">x</var>, <var title="">y</var>) as its first
          (and only) point, as if the <code title="dom-context-2d-moveTo"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-moveto">moveTo()</a></code> method had been called.</p>
        <p>The <dfn id="dom-context-2d-closepath" title="dom-context-2d-closePath"><code>closePath()</code></dfn>
          method must do nothing if the context has no subpaths. Otherwise, it must mark the last subpath as closed, create a new subpath whose first point is the same as the previous subpath's first point, and finally add this new subpath to the path.</p>
        <p class="note">If the last subpath had more than one point in its list of points, then this is equivalent to adding a straight line connecting the last point back to the first point, thus "closing"
          the shape, and then repeating the last (possibly implied) <code title="dom-context-2d-moveTo"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-moveto">moveTo()</a></code> call.</p>
        <p>New points and the lines connecting them are added to subpaths by using the <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-arc">arc()</a></code>, <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-arcTo">arcTo()</a></code>, <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-bezierCurveTo">bezierCurveTo()</a></code>, <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-lineto">lineTo()</a></code>, 
		or <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-quadraticCurveTo">quadraticCurveTo()</a></code> methods, 
		described below. In all cases, the methods only modify the last subpath in the context's paths.</p>
        <p>The <dfn id="dom-context-2d-lineto" title="dom-context-2d-lineTo"><code>lineTo(<var title="">x</var>, <var title="">y</var>)</code></dfn> method must
          <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#ensure-there-is-a-subpath">ensure there is a subpath</a> for <span title="">(<var title="">x</var>, <var title="">y</var>)</span> if the context has no subpaths. Otherwise, 
		the method must connect the last point in the subpath to the given point (<var title="">x</var>, <var title="">y</var>) using a straight line, and must then add the given point (<var title="">x</var>, <var title="">y</var>) to the subpath.</p>
        <p>The <dfn id="dom-context-2d-quadraticcurveto" title="dom-context-2d-quadraticCurveTo"><code>quadraticCurveTo(<var title="">cpx</var>, <var title="">cpy</var>, <var title="">x</var>,
          <var title="">y</var>)</code></dfn> method must <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#ensure-there-is-a-subpath">ensure there is a subpath</a> for <span title="">(<var title="">cpx</var>,
          <var title="">cpy</var>)</span>, connect the last point in the subpath to the given point (<var title="">x</var>, <var title="">y</var>) 
		by using a quadratic Bézier curve with control point (<var title="">cpx</var>, <var title="">cpy</var>), and 
		then must then add the given point (<var title="">x</var>, <var title="">y</var>) to the subpath. <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#refsBEZIER">[BEZIER]</a></p>
        <p>The <dfn id="dom-context-2d-beziercurveto" title="dom-context-2d-bezierCurveTo"><code>bezierCurveTo(<var title="">cp1x</var>, <var title="">cp1y</var>, <var title="">cp2x</var>, <var title="">cp2y</var>, <var title="">x</var>, <var title="">y</var>)</code></dfn> method must
          <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#ensure-there-is-a-subpath">ensure there is a subpath</a> for <span title="">(<var title="">cp1x</var>, <var title="">cp1y</var>)</span>, connect the last point in the subpath to the given point (<var title="">x</var>, <var title="">y</var>) 
		by using a cubic Bézier curve with control points (<var title="">cp1x</var>, <var title="">cp1y</var>) and (<var title="">cp2x</var>, <var title="">cp2y</var>), 
		and then must add the point (<var title="">x</var>, <var title="">y</var>) to the subpath. <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#refsBEZIER">[BEZIER]</a></p>
        <hr>
        <p>The <dfn id="dom-context-2d-arcto" title="dom-context-2d-arcTo"><code>arcTo(<var title="">x1</var>, <var title="">y1</var>, <var title="">x2</var>,
          <var title="">y2</var>, <var title="">radius</var>)</code></dfn>
          method must first <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#ensure-there-is-a-subpath">ensure there is a subpath</a> for <span title="">(<var title="">x1</var>, <var title="">y1</var>)</span>. Then, the behavior depends on the arguments and the last point in the subpath, as described below.</p>
        <ul>
        <li>Let the point (<var title="">x0</var>, <var title="">y0</var>) be the last point in the subpath.</li>
        <li>If the point (<var title="">x0</var>, <var title="">y0</var>) is equal to the point (<var title="">x1</var>, <var title="">y1</var>),
          or if the point (<var title="">x1</var>, <var title="">y1</var>) is equal to the point (<var title="">x2</var>, <var title="">y2</var>),
          or if the radius <var title="">radius</var> is zero, then the method must add the point (<var title="">x1</var>, <var title="">y1</var>)
          to the subpath, and connect that point to the previous point (<var title="">x0</var>, <var title="">y0</var>) by a straight line.</li>
        <li>Otherwise, if the points (<var title="">x0</var>, <var title="">y0</var>), (<var title="">x1</var>, <var title="">y1</var>), and (<var title="">x2</var>, <var title="">y2</var>) all lie on a single straight line, then the method must add the point (<var title="">x1</var>, <var title="">y1</var>) to the subpath, and connect that point to the previous point (<var title="">x0</var>, <var title="">y0</var>) by a straight line.</li>
        <li>Otherwise, let <var title="">The Arc</var> be the shortest arc given by circumference of the circle that has radius <var title="">radius</var>, and that has one point tangent to the half-infinite line that crosses the point (<var title="">x0</var>,
          <var title="">y0</var>) and ends at the point (<var title="">x1</var>, <var title="">y1</var>), and that has a different point tangent to the half-infinite line that ends at the point (<var title="">x1</var>, <var title="">y1</var>) and crosses the point
          (<var title="">x2</var>, <var title="">y2</var>). The points at which this circle touches these two lines are called the start and end tangent points respectively. The method must connect the point
          (<var title="">x0</var>, <var title="">y0</var>) to the start tangent point by a straight line, adding the start tangent point to the subpath, and then must connect the start tangent point to the end tangent point by <var title="">The Arc</var>, adding the end tangent point to the subpath.</li>
        </ul>
        <p>If the value for <var title="">radius</var> is a negative number, the implementation 
		must raise an <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#index_size_err">INDEX_SIZE_ERR</a></code>
          exception.</p>
        <hr>
        <p>The <dfn id="dom-context-2d-arc" title="dom-context-2d-arc"><code>arc(<var title="">x</var>, <var title="">y</var>, <var title="">radius</var>,
          <var title="">startAngle</var>, <var title="">endAngle</var>, <var title="">anticlockwise</var>)</code></dfn> method draws an arc. If the context has any subpaths, then the method must add a straight line from the last point in the subpath to the start point of the arc. In any case, 
		the <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-arc">arc()</a></code> method must draw the arc between the start point of the arc and the end point of the arc, and add the start and end points of the arc to the subpath. The arc and its start and end points are defined as follows:</p>
        <ul>
          <li>Consider a circle that has its origin at (<var title="">x</var>, <var title="">y</var>) and that has radius <var title="">radius</var>. The points at <var title="">startAngle</var>
          and <var title="">endAngle</var> along this circle's circumference—measured in radians clockwise from the positive x-axis—are the start and end points, respectively.</li>
        <li>If the <var title="">anticlockwise</var> argument is false and
          <span title=""><var title="">endAngle</var>-<var title="">startAngle</var></span> is equal to or greater than
          <span>2π</span>, or, if the <var title="">anticlockwise</var>
          argument is <em>true</em> and <span title=""><var title="">startAngle</var>-<var title="">endAngle</var></span> is equal to or greater than <span>2π</span>, then the arc is the whole circumference of this circle.</li>
<!--alternatively (this is not equivalent, but might make more sense, if browsers are willing to change to it: <p>If the absolute magnitude of the difference between the <var title="">startAngle</var> and <var title="">endAngle</var> angles is equal to or greater than <span>2&pi;</span>, then the arc is the whole circumference of this circle.</p>-->
        <li>Otherwise, the arc is the path along the circumference of this circle from the start point to the end point, going anti-clockwise if the <var title="">anticlockwise</var> argument is true, and clockwise if the <var title="">anticlockwise</var> argument is false. 
		Because the points are on the circle, as opposed to being simply angles from zero, the arc can never cover an angle greater than <span>2π</span> radians. If the two points are the same, or if the radius is zero, then the arc is defined as being of zero length in both directions. <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#refsGRAPHICS">[GRAPHICS]</a> </li>
        </ul>
        <p>If the value for <var title="">radius</var> is a negative number, the implementation 
		must raise an <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#index_size_err">INDEX_SIZE_ERR</a></code>
          exception.</p>
        <hr>
        <p>The <dfn id="dom-context-2d-rect" title="dom-context-2d-rect"><code>rect(<var title="">x</var>, <var title="">y</var>, <var title="">w</var>, <var title="">h</var>)</code></dfn> method must create a new subpath containing just the four points: (<var title="">x</var>, <var title="">y</var>), (<var title="">x</var>+<var title="">w</var>,
          <var title="">y</var>), (<var title="">x</var>+<var title="">w</var>, <var title="">y</var>+<var title="">h</var>),
          (<var title="">x</var>, <var title="">y</var>+<var title="">h</var>). 
		Those four points must be connected by straight lines, and the <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-rect">rect()</a></code> method must then mark the subpath as closed. 
		The method must then create a new subpath with the point (<var title="">x</var>, <var title="">y</var>) as the only point in the subpath.</p>
<!-- v4 feature request:
                * points as a primitive shape http://home.comcast.net/~urbanjost/canvas/vogle4.html
          -->
        <p>The <dfn id="dom-context-2d-fill" title="dom-context-2d-fill"><code>fill()</code></dfn>
          method must fill all the subpaths of the current path, by using the&nbsp;
          <code title="dom-context-2d-fillStyle"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-fillstyle">fillStyle</a></code> 
		method, and by using the non-zero winding number rule. Open subpaths must be implicitly closed when being filled (without affecting the actual subpaths).</p>
        <p class="note">Thus, if two overlapping but otherwise independent subpaths have opposite windings, they cancel out and result in no fill. If the 
		overlapping but otherwise independent subpaths have the same winding, that area just gets painted once.</p>
        <p>The <dfn id="dom-context-2d-stroke" title="dom-context-2d-stroke"><code>stroke()</code></dfn> method must calculate the strokes of all the subpaths of the current path,
          by using the <code title="dom-context-2d-lineWidth"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-linewidth">lineWidth</a></code>,
          <code title="dom-context-2d-lineCap"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-linecap">lineCap</a></code>, <code title="dom-context-2d-lineJoin"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-linejoin">lineJoin</a></code>, and (if appropriate) <code title="dom-context-2d-miterLimit"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-miterlimit">miterLimit</a></code> attributes, and then 
		must fill the combined stroke area by using the <code title="dom-context-2d-strokeStyle"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-strokestyle">strokeStyle</a></code>
          attribute.</p>
        <p class="note">Because the subpaths are drawn as one stroke,
          overlapping parts of the paths in one stroke operation are treated as if their union was what was painted.</p>
        <p>Paths, when filled or drawn with strokes, must be painted without affecting the current path, and must be subject to <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#shadows" title="shadows">shadow effects</a>, <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalalpha" title="dom-context-2d-globalAlpha">global alpha</a>, the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#clipping-region" title="clipping region">clipping region</a>, and <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalcompositeoperation" title="dom-context-2d-globalCompositeOperation">global composition operators</a>. (Transformations affect the path when the path is created, not when it is painted, though the stroke <em>style</em> is still affected by the transformation during painting.)</p>
        <p>Zero-length line segments must be pruned before drawing a stroke for 
		a path. Empty subpaths must be ignored.</p>
        <p>The <dfn id="dom-context-2d-clip" title="dom-context-2d-clip"><code>clip()</code></dfn>
          method must create a new <dfn id="clipping-region">clipping region</dfn> by calculating the intersection of the current clipping region and the area described by the current path, using the non-zero winding number rule. <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#refsGRAPHICS">[GRAPHICS]</a> Open subpaths must be implicitly closed when computing the clipping region, without affecting the actual subpaths. The new clipping region replaces the current clipping region.</p>
        <p>When the context is initialized, the clipping region must be set to the rectangle with the top left corner at (0,0) and the width and height of the coordinate space.</p>
<!-- v4 Jordan OSETE suggests:
            * support ways of extending the clipping region (union instead of intersection)
               - also "add", "subtract", "replace", "intersect" and "xor"
            * support ways of resetting the clipping region without save/restore
          -->
        <p>The <dfn id="dom-context-2d-ispointinpath" title="dom-context-2d-isPointInPath"><code>isPointInPath(<var title="">x</var>, <var title="">y</var>)</code></dfn> method must return true if the point given by the <var title="">x</var> and <var title="">y</var> coordinates passed to the method, when treated as coordinates in the canvas coordinate space unaffected by the current transformation, is inside the current path as determined by the non-zero winding number rule; and must return false otherwise. Points on the path itself are considered to be inside the path. If either of the arguments is infinite or NaN, then the method must return false.</p>
      </div>
      
      
      <h3 id="text"><span class="secno">3.9 </span>Text</h3>
<!-- a v3 feature -->
      <dl class="domintro">
        <dt><var title="">context</var> . <code title="dom-context-2d-font"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-font">font</a></code> [ = <var title="">value</var> ]</dt>
        <dd>
          <p>Returns the current font settings.</p>
          <p>Can be set, to change the font. The syntax is the same as for the CSS 'font' property; values that cannot be parsed as CSS font values are ignored.</p>
          <p>Relative keywords and lengths are computed relative to the font of the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a>.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-textAlign"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textalign">textAlign</a></code> [ = <var title="">value</var> ]</dt>
        <dd>
          <p>Returns the current text alignment settings.</p>
          <p>Can be set, to change the alignment. The possible values are
            <code title="">start</code>, <code title="">end</code>, <code title="">left</code>, <code title="">right</code>, and <code title="">center</code>. The default is <code title="">start</code>. Other values are ignored.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-textBaseline"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline">textBaseline</a></code> [ = <var title="">value</var> ]</dt>
        <dd>
          <p>Returns the current baseline alignment settings.</p>
          <p>Can be set, to change the baseline alignment. The possible values 
		  are <code title="">top</code>, <code title="">hanging</code>, <code title="">middle</code>, <code title="">alphabetic</code>, <code title="">ideographic</code>, and <code title="">bottom</code>. The default is <code title="">alphabetic</code>. Other values are ignored.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-fillText"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-filltext">fillText</a></code>(<var title="">text</var>, <var title="">x</var>, <var title="">y</var> [, <var title="">maxWidth</var> ] )</dt>
        <dd><p>Renders fill for the given text at the given position. If a maximum width is provided, the text 
		  is scaled to fit that width if necessary.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-strokeText"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-stroketext">strokeText</a></code>(<var title="">text</var>, <var title="">x</var>, <var title="">y</var> [, <var title="">maxWidth</var> ] )</dt>
        <dd>
          <p>Renders strokes for the given text at the given position. If a maximum width is provided, the text 
		  is scaled to fit that width if necessary.</p>
        </dd>
        <dt><var title="">metrics</var> = <var title="">context</var> . <code title="dom-context-2d-measureText"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-measuretext">measureText</a></code>(<var title="">text</var>)</dt>
        <dd>
          <p>Returns a <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#textmetrics">TextMetrics</a></code> object with the metrics of the given text in the current font.</p>
        </dd>
        <dt><var title="">metrics</var> . <code title="dom-textmetrics-width"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-textmetrics-width">width</a></code></dt>
        <dd>
          <p>Returns the advance width of the text that was passed to the
            <code title="dom-context-2d-measureText"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-measuretext">measureText()</a></code>
            method.</p>
        </dd>
      </dl>
      <div class="impl">
        <p>The <dfn id="dom-context-2d-font" title="dom-context-2d-font"><code>font</code></dfn> DOM attribute, on setting, must be parsed the same way as the 'font'
          property of CSS (but without supporting property-independent stylesheet syntax like 'inherit'), and the resulting font must be assigned to the context. 
		The 'line-height' component must be forced to
          'normal', the 'font-size' component converted to CSS pixels,
          and system fonts computed to explicit values. If the new value is syntactically incorrect (including using property-independent stylesheet syntax like 'inherit' or 'initial'),
          then the value must be ignored, without assigning a new font value. <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#refsCSS">[CSS]</a></p>
        <p>Font names must be interpreted in the context of the
          <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a>'s stylesheets; any fonts embedded using
          <code title="">@font-face</code> must therefore be available once they are loaded. (If a font is referenced before it is fully loaded,
          then it must be treated as if it is an unknown font, falling back to another as described by the relevant CSS specifications.) <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#refsCSSFONTS">[CSSFONTS]</a></p>
        <p>Only vector fonts should be used by the user agent; if a user agent were to use bitmap fonts then transformations would likely 
		have adverse affect on the font.</p>
        <p>On getting, the <code title="dom-context-2d-font"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-font">font</a></code>
          attribute must return the <span title="serializing a CSS       value">serialized form</span> of the current font of the context
          (with no 'line-height' component). <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#refsCSSOM">[CSSOM]</a></p>
        <div class="example">
          <p>For example, after the following statement:</p>
          <pre>context.font = 'italic 400 12px/2 Unknown Font, sans-serif';</pre>
          <p>...the expression <code title="">context.font</code> evaluates to the string "<code title="">italic&nbsp;12px&nbsp;"Unknown&nbsp;Font",&nbsp;sans-serif</code>". The
           "400" font-weight does not appear, because that is the default value; 
		  the line-height does not appear because it is forced to
           "normal", the default value.</p>
        </div>
        <p>When the context is created, the font of the context must be set to 10px sans-serif. When the 'font-size' component is set to lengths using percentages, 'em' or 'ex' units, or the 'larger' or 'smaller'
          keywords, these must be interpreted relative to the computed value of the 'font-size' property of the corresponding <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> at the time that the attribute is set. When the 'font-weight' component is set to the relative values 'bolder' and
          'lighter', these must be interpreted relative to the computed value of the 'font-weight' property of the corresponding
          <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> at the time that the attribute is set. If the computed values are undefined for a particular case
          (because the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> is not <a href="http://dev.w3.org/html5/spec/infrastructure.html#in-a-document">in a
          <code>Document</code></a>, for instance), then the relative keywords must be interpreted relative to the normal-weight 10px sans-serif default.</p>
        <p>When the context is created, the <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textalign">textAlign</a></code> attribute must initially have the value <code>start</code>. On getting, the <dfn id="dom-context-2d-textalign" title="dom-context-2d-textAlign"><code>textAlign</code></dfn> DOM attribute must return the current value. On setting, if the value is one of <code title="">start</code>, <code title="">end</code>, <code title="">left</code>, <code title="">right</code>, or <code title="">center</code>, 
		then the value of the <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textalign">textAlign</a></code> attribute must be changed to the new value. Otherwise, the new 
		value must be ignored. </p>
        <p>When the context is created, the <code title="dom-context-2d-textBaseline"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline">textBaseline</a></code> attribute must initially have the value <code title="">alphabetic</code>. 
		On getting, the <dfn id="dom-context-2d-textbaseline" title="dom-context-2d-textBaseline"><code>textBaseline</code></dfn>
          DOM attribute must return the current value. On setting, if the value is one of <code title="dom-context-2d-textBaseline-top"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline-top">top</a></code>, <code title="dom-context-2d-textBaseline-hanging"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline-hanging">hanging</a></code>, <code title="dom-context-2d-textBaseline-middle"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline-middle">middle</a></code>, <code title="dom-context-2d-textBaseline-alphabetic"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline-alphabetic">alphabetic</a></code>,
          <code title="dom-context-2d-textBaseline-ideographic"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline-ideographic">ideographic</a></code>,
          or <code title="dom-context-2d-textBaseline-bottom"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline-bottom">bottom</a></code>,
          then the value of the <code title="dom-context-2d-textBaseline"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline">textBaseline</a></code> must be changed to the new value. Otherwise, the new value must be ignored. </p>
      </div>
      <p>The <code title="dom-context-2d-textBaseline"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline">textBaseline</a></code>
          attribute's allowed keywords correspond to alignment points in the font:</p>
      <p>
        <img alt="The top of the em square is roughly at the top of the glyphs in a font, the hanging baseline is where some glyphs like आ are anchored, the middle is half-way between the top of the em square and the bottom of the em square, the alphabetic baseline is where characters like Á, ÿ, f, and Ω are anchored, the ideographic baseline is where glyphs like 私 and 達 are anchored, and the bottom of the em square is roughly at the bottom of the glyphs in a font. The top and bottom of the bounding box can be far from these baselines, due to glyphs extending far outside the em square." src="./The Canvas 2D API 1.0 Specification_files/baselines.png">
      </p>
      <p>The keywords map to these alignment points as follows:</p>
      <dl>
        <dt>
          <dfn id="dom-context-2d-textbaseline-top" title="dom-context-2d-textBaseline-top">
            <code>top</code>
          </dfn>
        </dt>
        <dd>The top of the em square</dd>
        <dt>
          <dfn id="dom-context-2d-textbaseline-hanging" title="dom-context-2d-textBaseline-hanging">
            <code>hanging</code>
          </dfn>
        </dt>
        <dd>The hanging baseline</dd>
        <dt>
          <dfn id="dom-context-2d-textbaseline-middle" title="dom-context-2d-textBaseline-middle">
            <code>middle</code>
          </dfn>
        </dt>
        <dd>The middle of the em square</dd>
        <dt>
          <dfn id="dom-context-2d-textbaseline-alphabetic" title="dom-context-2d-textBaseline-alphabetic">
            <code>alphabetic</code>
          </dfn>
        </dt>
        <dd>The alphabetic baseline</dd>
        <dt>
          <dfn id="dom-context-2d-textbaseline-ideographic" title="dom-context-2d-textBaseline-ideographic">
            <code>ideographic</code>
          </dfn>
        </dt>
        <dd>The ideographic baseline</dd>
        <dt>
          <dfn id="dom-context-2d-textbaseline-bottom" title="dom-context-2d-textBaseline-bottom">
            <code>bottom</code>
          </dfn>
        </dt>
        <dd>The bottom of the em square</dd>
      </dl>
      <div class="impl">
        <p>The <dfn id="dom-context-2d-filltext" title="dom-context-2d-fillText"><code>fillText()</code></dfn> and
          <dfn id="dom-context-2d-stroketext" title="dom-context-2d-strokeText"><code>strokeText()</code></dfn>
          methods take three (or four) arguments: <var title="">text</var>, <var title="">x</var>, <var title="">y</var>, and 
		(optionally) <var title="">maxWidth.</var> These methods render the given <var title="">text</var> at the given (<var title="">x</var>, <var title="">y</var>) coordinates 
		(ensuring that the text isn't wider than <var title="">maxWidth</var> if specified). 
		The <code><a href="http://dev.w3.org/html5/canvas-api/dom-context-2d-filltext">fillText()</a></code> and <code><a href="http://dev.w3.org/html5/canvas-api/dom-context-2d-stroketext">strokeText()</a></code> methods use the current
          <code title="dom-context-2d-font"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-font">font</a></code>, <code title="dom-context-2d-textAlign"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textalign">textAlign</a></code>, and <code title="dom-context-2d-textBaseline"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline">textBaseline</a></code>
          values. Specifically, when the methods are called, the user agent must run the following steps:</p>
        <ol>
          <li>
            <p>Let <var title="">font</var> be the current font of the context, as given by the <code title="dom-context-2d-font"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-font">font</a></code> attribute.</p>
          </li>
          <li>
            <p>Replace all the <a href="http://dev.w3.org/html5/spec/infrastructure.html#space-character" title="space character">space characters</a> in <var title="">text</var> with U+0020 SPACE characters.</p>
          </li>
          <li>
            <p>Form a hypothetical infinitely wide CSS line box containing a single inline box containing the text <var title="">text</var>.
           Set all the properties of the inline box at their initial values except the 'font'
           property of the inline box set to <var title="">font</var> and the
           'direction' property of the inline box set to <a href="http://dev.w3.org/html5/spec/dom.html#the-directionality">the directionality</a> of the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a>. <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#refsCSS">[CSS]</a></p>
          </li>
<!-- if you insert a step here, make sure to adjust the next step's final words -->
          <li>
            <p>If the <var title="">maxWidth</var> argument was specified and the hypothetical width of the inline box in the hypothetical line box is greater than <var title="">maxWidth</var> CSS pixels,
           then change <var title="">font</var> to have a more condensed font
           (if one is available or if a reasonably readable one can be synthesized by applying a horizontal scale factor to the font) or a smaller font, and return to the previous step.</p>
          </li>
          <li>
            <p>Let the <var title="">anchor point</var> be a point on the inline box, determined by the <code title="dom-context-2d-textAlign"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textalign">textAlign</a></code> and <code title="dom-context-2d-textBaseline"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline">textBaseline</a></code> values, as follows:</p>
            <p><strong>Horizontal position:</strong></p>
            <dl>
              <dt> If <code title="dom-context-2d-textAlign"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textalign">textAlign</a></code> is <code title="">left</code>, or</dt>
              <dt> If <code title="dom-context-2d-textAlign"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textalign">textAlign</a></code> is <code title="">start</code> and <a href="http://dev.w3.org/html5/spec/dom.html#the-directionality">the directionality</a> of the
             <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> is 'ltr', or</dt>
              <dt> If <code title="dom-context-2d-textAlign"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textalign">textAlign</a></code> is <code title="">end</code> and <a href="http://dev.w3.org/html5/spec/dom.html#the-directionality">the directionality</a> of the
             <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> is 'rtl', then</dt>
              <dd>Let the <var title="">anchor point</var>'s horizontal position be the left edge of the inline box.</dd>
              <p></p>
              <dt> If <code title="dom-context-2d-textAlign"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textalign">textAlign</a></code> is <code title="">right</code>, or</dt>
              <dt> If <code title="dom-context-2d-textAlign"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textalign">textAlign</a></code> is <code title="">end</code> and  <a href="http://dev.w3.org/html5/spec/dom.html#the-directionality">the directionality</a> of the
             <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> is 'ltr', or</dt>
              <dt> If <code title="dom-context-2d-textAlign"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textalign">textAlign</a></code> is <code title="">start</code> and <a href="http://dev.w3.org/html5/spec/dom.html#the-directionality">the directionality</a> of the
             <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> is 'rtl', 
			  then</dt>
              <dd>Let the <var title="">anchor point</var>'s horizontal position be the right edge of the inline box.</dd>
              <p></p>
              <dt> If <code title="dom-context-2d-textAlign"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textalign">textAlign</a></code> is <code title="">center</code>, then</dt>
              <dd>Let the <var title="">anchor point</var>'s horizontal position be half way between the left and right edges of the inline box.</dd>
            </dl>
            <p><strong>Vertical position:</strong></p>
            <dl>
              <dt> If <code title="dom-context-2d-textBaseline"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline">textBaseline</a></code> is <code title="dom-context-2d-textBaseline-top"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline-top">top</a></code>, then</dt>
              <dd>Let the <var title="">anchor point</var>'s vertical position be the top of the em box of the first available font of the inline box.</dd>
              <dt> If <code title="dom-context-2d-textBaseline"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline">textBaseline</a></code> is <code title="dom-context-2d-textBaseline-hanging"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline-hanging">hanging</a></code>, then</dt>
              <dd>Let the <var title="">anchor point</var>'s vertical position be the hanging baseline of the first available font of the inline box.</dd>
              <dt> If <code title="dom-context-2d-textBaseline"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline">textBaseline</a></code> is <code title="dom-context-2d-textBaseline-middle"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline-middle">middle</a></code>, then</dt>
              <dd>Let the <var title="">anchor point</var>'s vertical position be half way between the bottom and the top of the em box of the first available font of the inline box.</dd>
              <dt> If <code title="dom-context-2d-textBaseline"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline">textBaseline</a></code> is <code title="dom-context-2d-textBaseline-alphabetic"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline-alphabetic">alphabetic</a></code>, then</dt>
              <dd>Let the <var title="">anchor point</var>'s vertical position be the alphabetic baseline of the first available font of the inline box.</dd>
              <dt> If <code title="dom-context-2d-textBaseline"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline">textBaseline</a></code> is <code title="dom-context-2d-textBaseline-ideographic"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline-ideographic">ideographic</a></code>, then</dt>
              <dd>Let the <var title="">anchor point</var>'s vertical position be the ideographic baseline of the first available font of the inline box.</dd>
              <dt> If <code title="dom-context-2d-textBaseline"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline">textBaseline</a></code> is <code title="dom-context-2d-textBaseline-bottom"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-textbaseline-bottom">bottom</a></code>, then</dt>
              <dd>Let the <var title="">anchor point</var>'s vertical position be the bottom of the em box of the first available font of the inline box.</dd>
            </dl>
          </li>
          <li>
            <p>Paint the hypothetical inline box as the shape given by the text's glyphs, as transformed by the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#transformations" title="dom-context-2d-transformation">current transformation matrix</a>, and anchored and sized so that before applying the
            <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#transformations" title="dom-context-2d-transformation">current transformation matrix</a>, the <var title="">anchor point</var> is at (<var title="">x</var>, <var title="">y</var>) and each CSS pixel is mapped to one coordinate space unit.</p>
            <p>For the <code title="dom-context-2d-fillText"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-filltext">fillText()</a></code> method,
            the <code title="dom-context-2d-fillStyle"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-fillstyle">fillStyle</a></code> attribute must be applied to the glyphs and the <code title="dom-context-2d-strokeStyle"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-strokestyle">strokeStyle</a></code> attribute must be ignored. For <code title="dom-context-2d-strokeText"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-stroketext">strokeText()</a></code> the reverse holds:
			<code title="dom-context-2d-strokeStyle">
			<a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-strokestyle">strokeStyle</a></code> must be applied to the glyph outlines and <code title="dom-context-2d-fillStyle"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-fillstyle">fillStyle</a></code> must be ignored.</p>
            <p>Text is painted without affecting the current path and is subject to <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#shadows" title="shadows">shadow effects</a>, <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalalpha" title="dom-context-2d-globalAlpha">global alpha</a>, the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#clipping-region" title="clipping region">clipping region</a>, and <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalcompositeoperation" title="dom-context-2d-globalCompositeOperation">global composition operators</a>.</p>
          </li>
        </ol>
<!--v4DVT - this is commented out until CSS can get its act together enough to actual specify vertical text rendering (how long have we been waiting now?)

        WHEN EDITING THIS, FIX THE PARTS MARKED "&#x0058;&#x0058;&#x0058;" BELOW

          <p>The <dfn title="dom-context-2d-fillVerticalText"><code>fillVerticalText()</code></dfn>
          and <dfn title="dom-context-2d-strokeVerticalText"><code>strokeVerticalText()</code></dfn>
          methods take three or four arguments, <var title="">text</var>, <var title="">x</var>, <var title="">y</var>, and optionally <var title="">maxHeight</var>, and render the given <var title="">text</var> as vertical text at the given (<var title="">x</var>, <var title="">y</var>) coordinates ensuring that the text isn't taller than <var title="">maxHeight</var> if specified, using the current <code title="dom-context-2d-font">font</code> and <code title="dom-context-2d-textAlign">textAlign</code>
          values. Specifically, when the methods are called, the user agent must run the following steps:</p>

          <ol>

           <li><p>Let <var title="">font</var> be the current font of the context, as given by the <code title="dom-context-2d-font">font</code> attribute.</p></li>

           <li><p>Replace all the <span title="space character">space characters</span> in <var title="">text</var> with U+0020 SPACE characters.</p></li>

           <li><p>Form a <em class="&#x0058;&#x0058;&#x0058;">whatever CSS ends up calling vertical line boxes and inline boxes</em> containing the text <var title="">text</var>, with all the properties at their initial values except the 'font' property of the inline box set to <var title="">font</var> and the 'direction' property of the inline box set to <span>the directionality</span> of the <code>canvas</code>
           element.</p></li>

           <!- - if you insert a step here, make sure to adjust the next step's final words - ->

           <li><p>If the <var title="">maxHeight</var> argument was specified and the hypothetical height of the <em class="&#x0058;&#x0058;&#x0058;">box</em>
           in the hypothetical line box is greater than <var title="">maxHeight</var> CSS pixels, then change <var title="">font</var> to have a more condensed font (if one is available or if a reasonably readable one can be synthesized by applying an appropriate scale factor to the font) or a smaller font, and return to the previous step.</p></li>

           <li>

            <p>Let the <var title="">anchor point</var> be a point on the <em class="&#x0058;&#x0058;&#x0058;">inline box</var>, determined by the <code title="dom-context-2d-textAlign">textAlign</code>, as follows:</p>

            <p>Vertical position:</p>

            <dl>

             <dt> If <code title="dom-context-2d-textAlign">textAlign</code> is <code title="">start</code></dt>
             <dt> If <code title="dom-context-2d-textAlign">textAlign</code> is <code title="">left</code> and <span>the directionality</span> of the
             <code>canvas</code> element is 'ltr'</dt>
             <dt> If <code title="dom-context-2d-textAlign">textAlign</code> is <code title="">right</code> and <span>the directionality</span> of the
             <code>canvas</code> element is 'rtl'</dt>

             <dd>Let the <var title="">anchor point</var>'s vertical position be the top edge of the <em class="&#x0058;&#x0058;&#x0058;">inline box</em>.</dd>

             <dt> If <code title="dom-context-2d-textAlign">textAlign</code> is <code title="">end</code></dt>
             <dt> If <code title="dom-context-2d-textAlign">textAlign</code> is <code title="">right</code> and <span>the directionality</span> of the
             <code>canvas</code> element is 'ltr'</dt>
             <dt> If <code title="dom-context-2d-textAlign">textAlign</code> is <code title="">left</code> and <span>the directionality</span> of the
             <code>canvas</code> element is 'rtl'</dt>

             <dd>Let the <var title="">anchor point</var>'s vertical position be the bottom edge of the <em class="&#x0058;&#x0058;&#x0058;">inline box</em>.</dd>


             <dt> If <code title="dom-context-2d-textAlign">textAlign</code> is <code title="">center</code></dt>

             <dd>Let the <var title="">anchor point</var>'s vertical position be half way between the top and bottom edges of the <em class="&#x0058;&#x0058;&#x0058;">inline box</em>.</dd>

            </dl>

            <p>Let the horizontal position be half way between the left and right edges of the em box of the first available font of the <em class="&#x0058;&#x0058;&#x0058;">inline box</em>.</p>

           </li>

           <li>

            <p>Paint the hypothetical inline box as the shape given by the text's glyphs, as transformed by the <span title="dom-context-2d-transformation">current transformation matrix</span>, and anchored and sized so that before applying the
            <span title="dom-context-2d-transformation">current transformation matrix</span>, the <var title="">anchor point</var> is at (<var title="">x</var>, <var title="">y</var>) and each CSS pixel is mapped to one coordinate space unit.</p>

            <p>For <code title="dom-context-2d-fillVerticalText">fillVerticalText()</code>
            <code title="dom-context-2d-fillStyle">fillStyle</code> must be applied and <code title="dom-context-2d-strokeStyle">strokeStyle</code> must be ignored. For <code title="dom-context-2d-strokeVerticalText">strokeVerticalText()</code>
            the reverse holds and <code title="dom-context-2d-strokeStyle">strokeStyle</code> must be applied and <code title="dom-context-2d-fillStyle">fillStyle</code> must be ignored.</p>

            <p>Text is painted without affecting the current path, and is subject to <span title="shadows">shadow effects</span>, <span title="dom-context-2d-globalAlpha">global alpha</span>, the <span title="clipping region">clipping region</span>, and <span title="dom-context-2d-globalCompositeOperation">global composition operators</span>.</p>

           </li>

          </ol>

        v4DVT (also check for '- -' bits in the part above) -->
        <p>The <dfn id="dom-context-2d-measuretext" title="dom-context-2d-measureText"><code>measureText()</code></dfn>
          method takes one argument, <var title="">text</var>. When the method is invoked, the user agent must replace all the <a href="http://dev.w3.org/html5/spec/infrastructure.html#space-character" title="space       character">space characters</a> in <var title="">text</var> with U+0020 SPACE characters. 
		The user agent must then form a hypothetical infinitely wide CSS line box containing a single inline box containing the text <var title="">text</var>, with all the properties at their initial values except the 'font' property of the inline element set to the current font of the context, as given by the <code title="dom-context-2d-font"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-font">font</a></code> attribute. 
		The user agent must then return a new <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#textmetrics">TextMetrics</a></code> object with its
          <code title="dom-textmetrics-width"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-textmetrics-width">width</a></code> attribute set to the width of that inline box, in CSS pixels. <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#refsCSS">[CSS]</a></p>
        <p>The <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#textmetrics">TextMetrics</a></code> interface is used for the objects returned from <code title="dom-context-2d-measureText"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-measuretext">measureText()</a></code>. It has one attribute, <dfn id="dom-textmetrics-width" title="dom-textmetrics-width"><code>width</code></dfn>, which is set by the <code title="dom-context-2d-measureText"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-measuretext">measureText()</a></code>
          method.</p>
        <p class="note">Glyphs rendered using <code title="dom-context-2d-fillText"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-filltext">fillText()</a></code> and <code title="dom-context-2d-strokeText"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-stroketext">strokeText()</a></code> can spill out of the box given by the font size (the em square size) and the width returned by <code title="dom-context-2d-measureText"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-measuretext">measureText()</a></code> (the text width). This version of the specification does not provide a way to obtain the bounding box dimensions of the text. If the text is to be rendered and removed, care needs to be taken to replace the entire area of the canvas that the clipping region covers, not just the box given by the em square height and measured text width.</p>
<!-- v4: Drawing text along a given path -->
<!-- v4: Adding text to a path -->
<!-- see also: http://www.w3.org/TR/SVG11/text.html#TextpathLayoutRules -->
<!-- see also: http://developer.mozilla.org/en/docs/Drawing_text_using_a_canvas -->
      </div>
      <p class="note">A future version of the 2D context API may provide a way to render fragments of documents, rendered using CSS, straight to the canvas. This would be provided in preference to a dedicated way of doing multiline layout.</p>

      <h3 id="images"><span class="secno">3.10 </span>Images</h3>
      <p>To draw images onto the canvas, the <dfn id="dom-context-2d-drawimage" title="dom-context-2d-drawImage"><code>drawImage</code></dfn> method can be used.</p>
      <p>This method can be invoked with three different sets of arguments:</p>
      <ul class="brief">
        <li>
          <code title="">drawImage(<var title="">image</var>, <var title="">dx</var>, <var title="">dy</var>)</code>
        </li>
        <li>
          <code title="">drawImage(<var title="">image</var>, <var title="">dx</var>, <var title="">dy</var>, <var title="">dw</var>, <var title="">dh</var>)</code>
        </li>
        <li>
          <code title="">drawImage(<var title="">image</var>, <var title="">sx</var>, <var title="">sy</var>, <var title="">sw</var>, <var title="">sh</var>, <var title="">dx</var>, <var title="">dy</var>, <var title="">dw</var>, <var title="">dh</var>)</code>
        </li>
      </ul>
<!-- v3: drawImage() of an ImageData object might make sense (when resizing as well as filtering) - ack Charles Pritchard -->
      <p>Each of those three can take either an
          <code><a href="http://www.w3.org/TR/html5/text-level-semantics.html#htmlimageelement">HTMLImageElement</a></code>, an <code><a href="http://www.w3.org/TR/html5/the-canvas-element.html#htmlcanvaselement">HTMLCanvasElement</a></code>, or an <code><a href="http://dev.w3.org/html5/spec/video.html#htmlvideoelement">HTMLVideoElement</a></code> for the <var title="">image</var>
          argument.</p>
      <dl class="domintro">
        <dt><var title="">context</var> . <code title="">drawImage</code>(<var title="">image</var>, <var title="">dx</var>, <var title="">dy</var>)</dt>
        <dt><var title="">context</var> . <code title="">drawImage</code>(<var title="">image</var>, <var title="">dx</var>, <var title="">dy</var>, <var title="">dw</var>, <var title="">dh</var>)</dt>
        <dt><var title="">context</var> . <code title="">drawImage</code>(<var title="">image</var>, <var title="">sx</var>, <var title="">sy</var>, <var title="">sw</var>, <var title="">sh</var>, <var title="">dx</var>, <var title="">dy</var>, <var title="">dw</var>, <var title="">dh</var>)</dt>
        <dd>
          <p>Draws the given image onto the canvas. The arguments are interpreted as follows:</p>
          <p>
            <img alt="The sx and sy parameters give the x and y coordinates of the source rectangle; the sw and sh arguments give the width and height of the source rectangle; the dx and dy give the x and y coordinates of the destination rectangle; and the dw and dh arguments give the width and height of the destination rectangle." src="./The Canvas 2D API 1.0 Specification_files/drawImage.png">
          </p>
          <p>If the first argument is not an <code><a href="http://www.w3.org/TR/html5/text-level-semantics.html#the-img-element">img</a></code>,
            <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a>, or <code><a href="http://dev.w3.org/html5/spec/video.html#video">video</a></code> element, throws a
            <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#type_mismatch_err">TYPE_MISMATCH_ERR</a></code> exception.</p>
			<p>If the image is not fully decoded yet, or has no image data, throws an
            <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#invalid_state_err">INVALID_STATE_ERR</a></code> exception. </p>
			<p>If the second argument is not one of the allowed values, throws a <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#syntax_err">SYNTAX_ERR</a></code>
            exception.</p>
        </dd>
      </dl>
      <div class="impl">
<!-- createPattern() has an equivalent paragraph -->
        <p>The source rectangle is the rectangle whose corners are the four points (<var title="">sx</var>, <var title="">sy</var>), (<span title=""><var title="">sx</var>+<var title="">sw</var></span>, <var title="">sy</var>), (<span title=""><var title="">sx</var>+<var title="">sw</var></span>, <span title=""><var title="">sy</var>+<var title="">sh</var></span>), (<var title="">sx</var>, <span title=""><var title="">sy</var>+<var title="">sh</var></span>).</p>
        <p>The destination rectangle is the rectangle whose corners are the four points (<var title="">dx</var>, <var title="">dy</var>),
          (<span title=""><var title="">dx</var>+<var title="">dw</var></span>, <var title="">dy</var>), (<span title=""><var title="">dx</var>+<var title="">dw</var></span>, <span title=""><var title="">dy</var>+<var title="">dh</var></span>), (<var title="">dx</var>, <span title=""><var title="">dy</var>+<var title="">dh</var></span>).</p>
        <p>If not specified, the <var title="">dw</var> and <var title="">dh</var> arguments must default to the values of <var title="">sw</var> and <var title="">sh</var>, interpreted such that one CSS pixel in the image is treated as one unit in the canvas coordinate space. If the <var title="">sx</var>, <var title="">sy</var>, <var title="">sw</var>, and <var title="">sh</var> arguments are omitted, they must default to 0, 0,
          the image's intrinsic width in image pixels, and the image's intrinsic height in image pixels, respectively.</p>
<!-- createPattern() has an equivalent paragraph -->
        <p>Images are painted without affecting the current path, and are subject to <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#shadows" title="shadows">shadow effects</a>, <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalalpha" title="dom-context-2d-globalAlpha">global alpha</a>, the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#clipping-region" title="clipping region">clipping region</a>, and <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalcompositeoperation" title="dom-context-2d-globalCompositeOperation">global composition operators</a>.</p>
        <p>When <code title="dom-context-2d-drawImage"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-drawimage">drawImage()</a></code> is invoked, the region of the image specified by the source rectangle must be painted on the region of the canvas specified by the destination rectangle, after applying the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#transformations" title="dom-context-2d-transformation">current transformation matrix</a> to the points of the destination rectangle.</p>
        <p>The original image data of the source image must be used, not the 
		image as it is rendered (for example, <code title="attr-dim-width"><a href="http://www.w3.org/TR/html5/the-canvas-element.html#attr-dim-width">width</a></code> and <code title="attr-dim-height"><a href="http://www.w3.org/TR/html5/the-canvas-element.html#attr-dim-height">height</a></code> attributes on the source element have no effect). The image data must be processed in the original direction, even if the dimensions given are negative. <!--
          remove that last sentence if it causes confusion. Someone once suggested that 5,5,-2,-2 was different than 3,3,2,2; this is trying to clarify that this is no the case. --></p>
        <p class="note">This specification does not define the algorithm to use when scaling the image, if necessary.</p>
        <p class="note">When a canvas is drawn onto itself, the drawing model requires the source to be copied before the image is drawn back onto the canvas, so it is possible to copy parts of a canvas onto overlapping parts of itself.</p>
        <p>If the source rectangle is not entirely within the source image,
          or if one of the <var title="">sw</var> or <var title="">sh</var>
          arguments is zero, the implementation must raise an
          <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#index_size_err">INDEX_SIZE_ERR</a></code> exception.</p>
        <p>The <var title="">image</var> argument is an instance of either
          <code><a href="http://www.w3.org/TR/html5/text-level-semantics.html#htmlimageelement">HTMLImageElement</a></code>, <code><a href="http://www.w3.org/TR/html5/the-canvas-element.html#htmlcanvaselement">HTMLCanvasElement</a></code>, or
          <code><a href="http://dev.w3.org/html5/spec/video.html#htmlvideoelement">HTMLVideoElement</a></code>. If the <var title="">image</var> is of the wrong type or null, the implementation must raise a
          <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#type_mismatch_err">TYPE_MISMATCH_ERR</a></code> exception.</p>
<!-- createPattern() has an equivalent paragraph -->
        <p>If the <var title="">image</var> argument is an
          <code><a href="http://www.w3.org/TR/html5/text-level-semantics.html#htmlimageelement">HTMLImageElement</a></code> object whose <code title="dom-img-complete"><a href="http://www.w3.org/TR/html5/text-level-semantics.html#dom-img-complete">complete</a></code> attribute is false, then the implementation must raise an <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#invalid_state_err">INVALID_STATE_ERR</a></code>
          exception.</p>
<!-- createPattern() has an equivalent paragraph -->
<!-- handled by a later paragraph
          <p>If the <var title="">image</var> argument is an
          <code>HTMLCanvasElement</code> object with either a horizontal dimension or a vertical dimension equal to zero, then the implementation must raise an <code>INVALID_SIZE_ERR</code>
          exception.</p>
          -->
<!-- createPattern() has an equivalent paragraph -->
        <p>If the <var title="">image</var> argument is an
          <code><a href="http://www.w3.org/TR/html5/the-canvas-element.html#htmlcanvaselement">HTMLCanvasElement</a></code> object with either a horizontal dimension or a vertical dimension equal to zero, then the implementation must raise an <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#invalid_state_err">INVALID_STATE_ERR</a></code>
          exception.</p>
<!-- createPattern() has an equivalent paragraph -->
        <p>If the <var title="">image</var> argument is an
          <code><a href="http://dev.w3.org/html5/spec/video.html#htmlvideoelement">HTMLVideoElement</a></code> object whose <code title="dom-media-readyState"><a href="http://dev.w3.org/html5/spec/video.html#dom-media-readystate">readyState</a></code> attribute is either
          <code title="dom-media-HAVE_NOTHING"><a href="http://dev.w3.org/html5/spec/video.html#dom-media-have_nothing">HAVE_NOTHING</a></code> or <code title="dom-media-HAVE_METADATA"><a href="http://dev.w3.org/html5/spec/video.html#dom-media-have_metadata">HAVE_METADATA</a></code>, then the implementation must raise an <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#invalid_state_err">INVALID_STATE_ERR</a></code>
          exception.</p>
<!-- createPattern() has an equivalent paragraph -->
        <p>When the <var title="">image</var> argument is an
          <code><a href="http://dev.w3.org/html5/spec/video.html#htmlvideoelement">HTMLVideoElement</a></code>, then the frame at the <a href="http://dev.w3.org/html5/spec/video.html#current-playback-position">current playback position</a> must be used as the source image.</p>
        <p>When the <code title="dom-context-2d-drawImage"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-drawimage">drawImage()</a></code> method is passed an animated image as its <var title="">image</var>
          argument, the user agent must use the poster frame of the animation,
          or, if there is no poster frame, the first frame of the animation.</p>
      </div>
      
      
      <h3 id="pixel-manipulation">
        <span class="secno">3.11 </span>
        <dfn>Pixel manipulation</dfn>
      </h3>
      <dl class="domintro">
        <dt><var title="">imagedata</var> = <var title="">context</var> . <code title="dom-context-2d-createImageData"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-createimagedata">createImageData</a></code>(<var title="">sw</var>, <var title="">sh</var>)</dt>
        <dd>
          <p>Returns an <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a></code> object with the given dimensions in CSS pixels (Note 
		  that the CSS pixels might map to a different number of actual device pixels exposed by the object itself). All the pixels in the returned object are transparent black.</p>
        </dd>
        <dt><var title="">imagedata</var> = <var title="">context</var> . <code title="dom-context-2d-createImageData"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-createimagedata">createImageData</a></code>(<var title="">imagedata</var>)</dt>
        <dd>
          <p>Returns an <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a></code> object with the same dimensions as the argument. All the pixels in the returned object are transparent black.</p>
          <p>If the argument is null, throws a <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#not_supported_err">NOT_SUPPORTED_ERR</a></code> exception.</p>
        </dd>
        <dt><var title="">imagedata</var> = <var title="">context</var> . <code title="dom-context-2d-getImageData"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-getimagedata">getImageData</a></code>(<var title="">sx</var>, <var title="">sy</var>, <var title="">sw</var>, <var title="">sh</var>)</dt>
        <dd>
          <p>Returns an <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a></code> object containing the image data for the given rectangle of the canvas.</p>
          <p>If any of the arguments are not finite, throws a <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#not_supported_err">NOT_SUPPORTED_ERR</a></code> exception.</p> 
          <p>If the either the width or height argument is zero, throws an <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#index_size_err">INDEX_SIZE_ERR</a></code>
            exception.</p>
        </dd>
        <dt><var title="">imagedata</var> . <code title="dom-imagedata-data"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-imagedata-data">data</a></code></dt>
        <dd>
          <p>Returns the one-dimensional array containing the data for the <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a></code> object.</p>
        </dd>
        <dt><var title="">imagedata</var> . <code title="dom-imagedata-height"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-imagedata-height">height</a></code></dt>
        <dd>
          <p>Returns the actual dimensions of the data in the <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a></code> object, in device pixels.</p>
        </dd>
        <dt><var title="">imagedata</var> . <code title="dom-imagedata-width"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-imagedata-width">width</a></code></dt>
        <dd>
          <p>Returns the actual dimensions of the data in the <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a></code> object, in device pixels.</p>
        </dd>
        <dt><var title="">context</var> . <code title="dom-context-2d-putImageData"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-putimagedata">putImageData</a></code>(<var title="">imagedata</var>, <var title="">dx</var>, <var title="">dy</var> [, <var title="">dirtyX</var>, <var title="">dirtyY</var>, <var title="">dirtyWidth</var>, <var title="">dirtyHeight</var> ])</dt>
        <dd>
          <p>Paints the data from the given <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a></code> object onto the canvas. If a dirty rectangle is provided, only the pixels from that rectangle are painted.</p>
          <p>The <code title="dom-context-2d-globalAlpha"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalalpha">globalAlpha</a></code>
            and <code title="dom-context-2d-globalCompositeOperation"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalcompositeoperation">globalCompositeOperation</a></code>
            attributes, as well as the shadow attributes, are ignored for the purposes of this method call; pixels in the canvas are replaced wholesale, with no composition, alpha blending, shadows,
            etc.</p>
          <p>If the first argument is not an <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a></code> object,
            throws a <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#type_mismatch_err">TYPE_MISMATCH_ERR</a></code> exception.</p>
		  <p>If any numerical arguments are not finite, throws a
            <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#not_supported_err">NOT_SUPPORTED_ERR</a></code> exception 
		  .</p>
        </dd>
      </dl>
      <div class="impl">
        <p>The <dfn id="dom-context-2d-createimagedata" title="dom-context-2d-createImageData"><code>createImageData()</code></dfn>
          method is used to instantiate a new blank <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a></code>
          object. When the method is invoked with two arguments <var title="">sw</var> and <var title="">sh</var>, it must return an
          <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a></code> object representing a rectangle with a width in CSS pixels equal to the absolute magnitude of <var title="">sw</var> and a height in CSS pixels equal to the absolute magnitude of <var title="">sh</var>. When invoked with a single <var title="">imagedata</var> argument, it must return an
          <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a></code> object representing a rectangle with the same dimensions as the <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a></code> object passed as the argument. The <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a></code> object return must be filled with transparent black.</p>
        <p>The <dfn id="dom-context-2d-getimagedata" title="dom-context-2d-getImageData"><code>getImageData(<var title="">sx</var>, <var title="">sy</var>, <var title="">sw</var>,
          <var title="">sh</var>)</code></dfn> method must return an
          <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a></code> object representing the underlying pixel data for the area of the canvas denoted by the rectangle whose corners are the four points (<var title="">sx</var>, <var title="">sy</var>),
          (<span title=""><var title="">sx</var>+<var title="">sw</var></span>, <var title="">sy</var>), (<span title=""><var title="">sx</var>+<var title="">sw</var></span>, <span title=""><var title="">sy</var>+<var title="">sh</var></span>), (<var title="">sx</var>, <span title=""><var title="">sy</var>+<var title="">sh</var></span>), 
		in canvas coordinate space units. Pixels outside the canvas must be returned as transparent black. Pixels must be returned as alpha values 
		that have not been premultiplied.</p>
        <!-- Eliot -->
        <p>If any of the arguments to <code title="dom-context-2d-createImageData"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-createimagedata">createImageData()</a></code> or
          <code title="dom-context-2d-getImageData"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-getimagedata">getImageData()</a></code> are infinite or NaN, or if the <code title="dom-context-2d-createImageData"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-createimagedata">createImageData()</a></code>
          method is invoked with only one argument but that argument is null,
          the method must instead raise a <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#not_supported_err">NOT_SUPPORTED_ERR</a></code>
          exception. If either the <var title="">sw</var> or <var title="">sh</var> arguments are zero, the method must instead raise an <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#index_size_err">INDEX_SIZE_ERR</a></code> exception.</p>
        <p><code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a></code> objects must be initialized so that their
          <dfn id="dom-imagedata-width" title="dom-imagedata-width"><code>width</code></dfn> attribute is set to <var title="">w</var>, the number of physical device pixels per row in the image data, their <dfn id="dom-imagedata-height" title="dom-imagedata-height"><code>height</code></dfn> attribute is set to <var title="">h</var>, the number of rows in the image data,
          and their <dfn id="dom-imagedata-data" title="dom-imagedata-data"><code>data</code></dfn>
          attribute is initialized to a <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspixelarray">CanvasPixelArray</a></code> object holding the image data. At least one pixel's worth of image data must be returned.</p>
        <p>The <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspixelarray">CanvasPixelArray</a></code> object provides ordered,
          indexed access to the color components of each pixel of the image data. The data must be represented in left-to-right order, row by row top to bottom, starting with the top left, with each pixel's red, green, blue, and alpha components being given in that order for each pixel. Each component of each device pixel represented in this array must be in the range 
		from 0 to 255, representing the 8-bit value for that component. The components must be assigned consecutive indices starting with 0 for the top left pixel's red component.</p>
        <p>The <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspixelarray">CanvasPixelArray</a></code> object thus represents <var title="">h</var>×<var title="">w</var>×4 integers. The
          <dfn id="dom-canvaspixelarray-length" title="dom-canvaspixelarray-length"><code>length</code></dfn>
          attribute of a <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspixelarray">CanvasPixelArray</a></code> object must return this number.</p>
        <p>The <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspixelarray">CanvasPixelArray</a></code> object's <span>indices of the supported indexed properties</span> are the numbers in the range 
		from 0 to (<span title=""><var title="">h</var>×<var title="">w</var>×4)-1</span>.</p>
        <p>When a <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspixelarray">CanvasPixelArray</a></code> object is <dfn id="dom-canvaspixelarray-get" title="dom-CanvasPixelArray-get">indexed to retrieve an indexed property</dfn> <var title="">index</var>, the value returned must be the value of the component occupying the 
		position <var title="">index</var>, in the array.</p>
        <p>When a <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspixelarray">CanvasPixelArray</a></code> object is <dfn id="dom-canvaspixelarray-set" title="dom-CanvasPixelArray-set">indexed to modify an indexed property</dfn> <var title="">index</var>, 
		with value <var title="">value</var>, the value of the component occupying the 
		position <var title="">index</var>, in the array must be set to <var title="">value</var>. JS
          <code>undefined</code> values must be converted to zero. Other values must first be converted to numbers using JavaScript's ToNumber algorithm, and if the result is a NaN value, then the value must be converted to zero. If the result is less than 0, it must be clamped to zero. If the result is more than 255, it must be clamped to 255. If the number is not an integer, it should be rounded to the nearest integer using the IEEE 754 <em>convertToIntegerTiesToEven</em>
          rounding mode. <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#refsECMA262">[ECMA262]</a> <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#refsIEEE754">[IEEE754]</a></p>
        <p class="note">The width and height (<var title="">w</var> and <var title="">h</var>) 
		may be different from the <var title="">sw</var>
          and <var title="">sh</var> arguments to the above methods. This may 
		occur, for example, if the canvas is backed by a high-resolution bitmap or if the <var title="">sw</var> and <var title="">sh</var> arguments are negative.</p>
        <p>The <dfn id="dom-context-2d-putimagedata" title="dom-context-2d-putImageData"><code>putImageData(<var title="">imagedata</var>, <var title="">dx</var>, <var title="">dy</var>, <var title="">dirtyX</var>, <var title="">dirtyY</var>, <var title="">dirtyWidth</var>, <var title="">dirtyHeight</var>)</code></dfn> method writes data from
          <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a></code> structures back to the canvas.</p>
        <p>If any of the arguments to the method are infinite or NaN, the method must raise a <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#not_supported_err">NOT_SUPPORTED_ERR</a></code> exception.</p>
        <p>If the first argument to the method is null or not an
          <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a></code> object then the <code title="dom-context-2d-putImageData"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-putimagedata">putImageData()</a></code> method must raise a <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#type_mismatch_err">TYPE_MISMATCH_ERR</a></code> exception.</p>
        <p>When the last four arguments are omitted, they must be assumed to have the values 0, 0, the <code title="dom-imagedata-width"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-imagedata-width">width</a></code> member of the <var title="">imagedata</var> structure, and the <code title="dom-imagedata-height"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-imagedata-height">height</a></code> member of the <var title="">imagedata</var> structure, respectively.</p>
        <p>When invoked with arguments that do not, per the last few paragraphs, cause an exception to be raised, the <code title="dom-context-2d-putImageData"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-putimagedata">putImageData()</a></code> method must act as follows:</p>
        <ol>
          <li>
            <p>Let <var title="">dx<sub>device</sub></var> be the x-coordinate of the device pixel in the underlying pixel data of the canvas corresponding to the <var title="">dx</var> coordinate in the canvas coordinate space.</p>
            <p>Let <var title="">dy<sub>device</sub></var> be the y-coordinate of the device pixel in the underlying pixel data of the canvas corresponding to the <var title="">dy</var> coordinate in the canvas coordinate space.</p>
          </li>
          <li>
            <p>If <var title="">dirtyWidth</var> is negative, let <var title="">dirtyX</var> be <span title=""><var title="">dirtyX</var>+<var title="">dirtyWidth</var></span>, and let <var title="">dirtyWidth</var> be equal to the absolute magnitude of
            <var title="">dirtyWidth</var>.</p>
            <p>If <var title="">dirtyHeight</var> is negative, let <var title="">dirtyY</var> be <span title=""><var title="">dirtyY</var>+<var title="">dirtyHeight</var></span>, and let <var title="">dirtyHeight</var> be equal to the absolute magnitude of
            <var title="">dirtyHeight</var>.</p>
          </li>
          <li>
            <p>If <var title="">dirtyX</var> is negative, let <var title="">dirtyWidth</var> be <span title=""><var title="">dirtyWidth</var>+<var title="">dirtyX</var></span>, and let <var title="">dirtyX</var> be zero.</p>
            <p>If <var title="">dirtyY</var> is negative, let <var title="">dirtyHeight</var> be <span title=""><var title="">dirtyHeight</var>+<var title="">dirtyY</var></span>, and let <var title="">dirtyY</var> be zero.</p>
          </li>
          <li>
            <p>If <span title=""><var title="">dirtyX</var>+<var title="">dirtyWidth</var></span> is greater than the <code title="dom-imagedata-width"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-imagedata-width">width</a></code> attribute of the <var title="">imagedata</var> argument, let <var title="">dirtyWidth</var> be the value of that <code title="dom-imagedata-width"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-imagedata-width">width</a></code> attribute, minus the value of <var title="">dirtyX</var>.</p>
            <p>If <span title=""><var title="">dirtyY</var>+<var title="">dirtyHeight</var></span> is greater than the <code title="dom-imagedata-height"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-imagedata-height">height</a></code> attribute of the <var title="">imagedata</var> argument, let <var title="">dirtyHeight</var> be the value of that <code title="dom-imagedata-height"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-imagedata-height">height</a></code> attribute, minus the value of <var title="">dirtyY</var>.</p>
          </li>
          <li>
            <p>If, after those changes, either <var title="">dirtyWidth</var>
            or <var title="">dirtyHeight</var> is negative or zero, stop these steps without affecting the canvas.</p>
          </li>
          <li>
            <p>Otherwise, for all integer values of <var title="">x</var>
           and <var title="">y</var> where <span title=""><var title="">dirtyX</var>&nbsp;≤&nbsp;<var title="">x</var>&nbsp;&lt;&nbsp;<span title=""><var title="">dirtyX</var>+<var title="">dirtyWidth</var></span></span>
           and <span title=""><var title="">dirtyY</var>&nbsp;≤&nbsp;<var title="">y</var>&nbsp;&lt;&nbsp;<span title=""><var title="">dirtyY</var>+<var title="">dirtyHeight</var></span></span>, copy the four channels of the pixel with coordinate (<var title="">x</var>, <var title="">y</var>) in the <var title="">imagedata</var> data structure to the pixel with coordinate (<span title=""><var title="">dx<sub>device</sub></var>+<var title="">x</var></span>,
           <span title=""><var title="">dy<sub>device</sub></var>+<var title="">y</var></span>) in the underlying pixel data of the canvas.</p>
          </li>
        </ol>
        <p>The handling of pixel rounding when the specified coordinates do not exactly map to the device coordinate space is not defined by this specification, except that the following must result in no visible changes to the rendering:</p>
        <pre>context.putImageData(context.getImageData(x, y, w, h), p, q);</pre>
        <p>...for any value of <var title="">x</var>, <var title="">y</var>,
          <var title="">w</var>, and <var title="">h</var> and where <var title="">p</var> is the smaller of <var title="">x</var> and the sum of <var title="">x</var> and <var title="">w</var>, and <var title="">q</var> is the smaller of <var title="">y</var> and the sum of <var title="">y</var> and <var title="">h</var>; and except that the following two calls:</p>
        <pre>context.createImageData(w, h);
        context.getImageData(0, 0, w, h);</pre>
        <p>...must return <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a></code> objects with the same dimensions, for any value of <var title="">w</var> and <var title="">h</var>. In other words, while user agents may round the arguments of these methods so that they map to device pixel boundaries, any rounding performed must be performed consistently for all of the <code title="dom-context-2d-getImageData"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-getimagedata">createImageData()</a></code>, <code title="dom-context-2d-getImageData"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-getimagedata">getImageData()</a></code> and <code title="dom-context-2d-putImageData"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-putimagedata">putImageData()</a></code>
          operations.</p>
        <p class="note">Due to the lossy nature of converting to and from premultiplied alpha color values, pixels that have just been set using <code title="dom-context-2d-putImageData"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-putimagedata">putImageData()</a></code> might be returned to an equivalent <code title="dom-context-2d-getImageData"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-getimagedata">getImageData()</a></code> as different values.</p>
        <p>The current path, <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#transformations" title="dom-context-2d-transformation">transformation matrix</a>,
          <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#shadows" title="shadows">shadow attributes</a>, <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalalpha" title="dom-context-2d-globalAlpha">global alpha</a>, the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#clipping-region" title="clipping region">clipping region</a>, and <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalcompositeoperation" title="dom-context-2d-globalCompositeOperation">global composition operator</a> must not affect the <code title="dom-context-2d-getImageData"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-getimagedata">getImageData()</a></code> and <code title="dom-context-2d-putImageData"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-putimagedata">putImageData()</a></code>
          methods.</p>
      </div>
      <div class="example">
        <p>The data returned by <code title="dom-context-2d-getImageData"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-getimagedata">getImageData()</a></code> is at the resolution of the canvas backing store, which is likely to not be one device pixel to each CSS pixel if the display used is a high resolution display.</p>
        <p>In the following example, the script generates an
           <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#imagedata">ImageData</a></code> object so that it can draw onto it.</p>
        <pre>// canvas is a reference to a &lt;canvas&gt; element var context = canvas.getContext('2d');

        // create a blank slate var data = context.createImageData(canvas.width, canvas.height);

        // create some plasma FillPlasma(data, 'green'); // green plasma

        // add a cloud to the plasma AddCloud(data, data.width/2, data.height/2); // put a cloud in the middle

        // paint the plasma+cloud on the canvas context.putImageData(data, 0, 0);

        // support methods function FillPlasma(data, color) { ... }
        function AddCloud(data, x, y) { ... }</pre>
      </div>
      <div class="example">
        <p>Here is an example of using <code title="dom-context-2d-getImageData"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-getimagedata">getImageData()</a></code> and <code title="dom-context-2d-putImageData"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-putimagedata">putImageData()</a></code> to implement an edge detection filter.</p>
        <pre>&lt;!DOCTYPE HTML&gt;
        &lt;html&gt;
         &lt;head&gt;
          &lt;title&gt;Edge detection demo&lt;/title&gt;
          &lt;script&gt;
           var image = new Image();
           function init() {
             image.onload = demo;
             image.src = "image.jpeg";
           }
           function demo() {
             var canvas = document.getElementsByTagName('canvas')[0];
             var context = canvas.getContext('2d');

             // draw the image onto the canvas context.drawImage(image, 0, 0);

             // get the image data to manipulate var input = context.getImageData(0, 0, canvas.width, canvas.height);

             // get an empty slate to put the data into var output = context.createImageData(canvas.width, canvas.height);

             // alias some variables for convenience
             // notice that we are using input.width and input.height here
             // as they might not be the same as canvas.width and canvas.height
             // (in particular, they might be different on high-res displays)
             var w = input.width, h = input.height;
             var inputData = input.data;
             var outputData = output.data;

             // edge detection for (var y = 1; y &lt; h-1; y += 1) {
               for (var x = 1; x &lt; w-1; x += 1) {
                 for (var c = 0; c &lt; 3; c += 1) {
                   var i = (y*w + x)*4 + c;
                   outputData[i] = 127 + -inputData[i - w*4 - 4] -   inputData[i - w*4] - inputData[i - w*4 + 4] +
                                         -inputData[i - 4]       + 8*inputData[i]       - inputData[i + 4] +
                                         -inputData[i + w*4 - 4] -   inputData[i + w*4] - inputData[i + w*4 + 4];
                 }
                 outputData[(y*w + x)*4 + 3] = 255; // alpha
               }
             }

             // put the image data back after manipulation context.putImageData(output, 0, 0);
           }
          &lt;/script&gt;
         &lt;/head&gt;
         &lt;body onload="init()"&gt;
          &lt;canvas&gt;&lt;/canvas&gt;
         &lt;/body&gt;
        &lt;/html&gt;</pre>
      </div>
      
      <div class="impl">
        <h3 id="drawing-model"><span class="secno">3.12 </span>Drawing model</h3>
        <p>When a shape or image is painted, user agents must follow these steps, in the order given (or act as if they do):</p>
        <ol>
          <li>
            <p>Render the shape or image, creating image <var title="">A</var>, as described in the previous sections. For shapes, the current fill, stroke, and line styles must be honored,
           and the stroke must itself also be subjected to the current transformation matrix.</p>
          </li>
          <li>
            <p><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#when-shadows-are-drawn">When shadows are drawn</a>, render the shadow from image <var title="">A</var>, using the current shadow styles,
           creating image <var title="">B</var>.</p>
          </li>
          <li>
            <p><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#when-shadows-are-drawn">When shadows are drawn</a>, multiply the alpha component of every pixel in <var title="">B</var> by <code title="dom-context-2d-globalAlpha"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalalpha">globalAlpha</a></code>.</p>
          </li>
          <li>
            <p><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#when-shadows-are-drawn">When shadows are drawn</a>, composite <var title="">B</var> within the clipping region over the current canvas bitmap using the current composition operator.</p>
          </li>
          <li>
            <p>Multiply the alpha component of every pixel in <var title="">A</var> by <code title="dom-context-2d-globalAlpha"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-globalalpha">globalAlpha</a></code>.</p>
          </li>
          <li>
            <p>Composite <var title="">A</var> within the clipping region over the current canvas bitmap using the current composition operator.</p>
          </li>
        </ol>
      </div>
      
      
      <div class="impl">
        <h2 id="color-spaces-and-color-correction"><span class="secno">4. </span>Color spaces and color correction</h2>
        <p>The <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> APIs must perform color correction at only two points: when rendering images with their own gamma correction and color space information onto the canvas, to convert the image to the color space used by the canvas (e.g. using the
          <code title="dom-context-2d-drawImage"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-drawimage">drawImage()</a></code> method with an <code><a href="http://www.w3.org/TR/html5/text-level-semantics.html#htmlimageelement">HTMLImageElement</a></code> object), and when rendering the actual canvas bitmap to the output device.</p>
        <p class="note">Thus, in the 2D context, colors used to draw shapes onto the canvas will exactly match colors obtained through the <code title="dom-context-2d-getImageData"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-getimagedata">getImageData()</a></code>
          method.</p>
        <p>The <code title="dom-canvas-toDataURL"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-canvas-todataurl">toDataURL()</a></code> method must not include color space information in the resource returned. Where the output format allows it, the color of pixels in resources created by <code title="dom-canvas-toDataURL"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-canvas-todataurl">toDataURL()</a></code> must match those returned by the <code title="dom-context-2d-getImageData"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-getimagedata">getImageData()</a></code>
          method.</p>
        <p>In user agents that support CSS, the color space used by a
          <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> must match the color space used for processing any colors for that element in CSS.</p>
        <p>The gamma correction and color space information of images must be handled in such a way that an image rendered directly using an
          <code><a href="http://www.w3.org/TR/html5/text-level-semantics.html#the-img-element">img</a></code> element would use the same colors as one painted on a <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> that is then itself rendered. Furthermore, the rendering of images that have no color correction information (such as those returned by the <code title="dom-canvas-toDataURL"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-canvas-todataurl">toDataURL()</a></code> method) must be rendered with no color correction.</p>
        <p class="note">Thus, in the 2D context, calling the <code title="dom-context-2d-drawImage"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-drawimage">drawImage()</a></code> method to render the output of the <code title="dom-canvas-toDataURL"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-canvas-todataurl">toDataURL()</a></code> method to the canvas, given the appropriate dimensions, has no visible effect.</p>
      </div>
    </div>
    
    
    
    
    <div class="section">
      <h2 id="accessibility">5. Accessibility Considerations</h2>
      <p>Authors should not use the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> in a document when a more suitable element is available. For example, it is inappropriate to use a <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> to render a page heading: if the desired presentation of the heading is graphically intense, it should be marked up using appropriate elements (typically <code><a href="http://dev.w3.org/html5/spec/semantics.html#the-h1-h2-h3-h4-h5-and-h6-elements">h1</a></code>) and then styled using CSS and supporting technologies such as XBL.</p>
      <p>When authors use the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a>, they must also provide content that, when presented to the user, conveys essentially the same function or purpose as the bitmap canvas. This content may be placed as content of the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a>. The contents of the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a>, if any, are the element's <a href="http://dev.w3.org/html5/spec/dom.html#fallback-content">fallback content</a>.</p>
      <p>In interactive visual media, if <a href="http://dev.w3.org/html5/spec/browsers.html#concept-n-script" title="concept-n-script">scripting is enabled</a> for the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a>, the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> represents an embedded element with a dynamically created image.</p>
      <p>In non-interactive, static, visual media, if the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> has been previously painted on (e.g. if the page was viewed in an interactive visual medium and is now being printed, or if some script that ran during the page layout process painted on the element), then the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> represents <a href="http://dev.w3.org/html5/spec/dom.html#embedded-content-2">embedded content</a> with the current image and size. Otherwise, the element represents its <a href="http://dev.w3.org/html5/spec/dom.html#fallback-content">fallback content</a> instead.</p>
      <p>In non-visual media, and in visual media if <a href="http://dev.w3.org/html5/spec/browsers.html#concept-n-noscript" title="concept-n-noscript">scripting is disabled</a> for the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a>, the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> represents its <a href="http://dev.w3.org/html5/spec/dom.html#fallback-content">fallback content</a> instead.</p>
      
      <p class="XXX">Techniques and additional APIs to make specific uses of <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface elements</a> more widely accessible are under discussion, and will be reflected in this draft as progress is made.</p>
    </div>
    
    
    
    
    <div class="impl">
      <div class="section">
        <h2 id="security-with-canvas-elements">6. Security with Canvas Interface Elements</h2>
        <p><strong>Information leakage</strong> can occur if scripts from one <a href="http://dev.w3.org/html5/spec/browsers.html#origin-0">origin</a> can access information (e.g. read pixels)
      from images from another origin (one that isn't the <a href="http://dev.w3.org/html5/spec/browsers.html#same-origin" title="same origin">same</a>).</p>
        <p>To mitigate this, <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a>s are defined to have a flag indicating whether they are <em>origin-clean</em>. All
      <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a>s must start with their
      <em>origin-clean</em> set to true. The flag must be set to false if any of the following actions occur:</p>
        <ul>
          <li>
            <p>The element's 2D context's <code title="dom-context-2d-drawImage"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-drawimage">drawImage()</a></code> method is called with an <code><a href="http://www.w3.org/TR/html5/text-level-semantics.html#htmlimageelement">HTMLImageElement</a></code> or an
       <code><a href="http://dev.w3.org/html5/spec/video.html#htmlvideoelement">HTMLVideoElement</a></code> whose <a href="http://dev.w3.org/html5/spec/browsers.html#origin-0">origin</a> is not the
       <a href="http://dev.w3.org/html5/spec/browsers.html#same-origin" title="same origin">same</a> as that of the
       <code>Document</code> object that owns the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a>.</p>
          </li>
          <li>
            <p>The element's 2D context's <code title="dom-context-2d-drawImage"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-drawimage">drawImage()</a></code> method is called with an <code><a href="http://www.w3.org/TR/html5/the-canvas-element.html#htmlcanvaselement">HTMLCanvasElement</a></code> whose
       <em>origin-clean</em> flag is false.</p>
          </li>
          <li>
            <p>The element's 2D context's <code title="dom-context-2d-fillStyle"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-fillstyle">fillStyle</a></code> attribute is set to a <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspattern">CanvasPattern</a></code> object that was created from an
       <code><a href="http://www.w3.org/TR/html5/text-level-semantics.html#htmlimageelement">HTMLImageElement</a></code> or an <code><a href="http://dev.w3.org/html5/spec/video.html#htmlvideoelement">HTMLVideoElement</a></code>
       whose <a href="http://dev.w3.org/html5/spec/browsers.html#origin-0">origin</a> was not the <a href="http://dev.w3.org/html5/spec/browsers.html#same-origin" title="same        origin">same</a> as that of the <code>Document</code> object that owns the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> when the pattern was created.</p>
          </li>
          <li>
            <p>The element's 2D context's <code title="dom-context-2d-fillStyle"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-fillstyle">fillStyle</a></code> attribute is set to a <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspattern">CanvasPattern</a></code> object that was created from an
       <code><a href="http://www.w3.org/TR/html5/the-canvas-element.html#htmlcanvaselement">HTMLCanvasElement</a></code> whose <em>origin-clean</em> flag was false when the pattern was created.</p>
          </li>
          <li>
            <p>The element's 2D context's <code title="dom-context-2d-strokeStyle"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-strokestyle">strokeStyle</a></code> attribute is set to a <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspattern">CanvasPattern</a></code> object that was created from an
       <code><a href="http://www.w3.org/TR/html5/text-level-semantics.html#htmlimageelement">HTMLImageElement</a></code> or an <code><a href="http://dev.w3.org/html5/spec/video.html#htmlvideoelement">HTMLVideoElement</a></code>
       whose <a href="http://dev.w3.org/html5/spec/browsers.html#origin-0">origin</a> was not the <a href="http://dev.w3.org/html5/spec/browsers.html#same-origin" title="same        origin">same</a> as that of the <code>Document</code> object that owns the <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> when the pattern was created.</p>
          </li>
          <li>
            <p>The element's 2D context's <code title="dom-context-2d-strokeStyle"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-strokestyle">strokeStyle</a></code> attribute is set to a <code><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#canvaspattern">CanvasPattern</a></code> object that was created from an
       <code><a href="http://www.w3.org/TR/html5/the-canvas-element.html#htmlcanvaselement">HTMLCanvasElement</a></code> whose <em>origin-clean</em> flag was false when the pattern was created.</p>
          </li>
        </ul>
        <p>Whenever the <code title="dom-canvas-toDataURL"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-canvas-todataurl">toDataURL()</a></code> method of a
      <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> whose <em>origin-clean</em> flag is set to false is called, the method must raise a <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#security_err">SECURITY_ERR</a></code>
      exception.</p>
        <p>Whenever the <code title="dom-context-2d-getImageData"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#dom-context-2d-getimagedata">getImageData()</a></code> method of the 2D context of a <a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#def-canvas-interface-element">canvas interface element</a> whose
      <em>origin-clean</em> flag is set to false is called with otherwise correct arguments, the method must raise a <code><a href="http://dev.w3.org/html5/spec/infrastructure.html#security_err">SECURITY_ERR</a></code>
      exception.</p>
        <p class="note">Even resetting the canvas state by changing its
      <code title="attr-canvas-width"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#attr-canvas-width">width</a></code> or <code title="attr-canvas-height"><a href="http://dev.w3.org/html5/canvas-api/canvas-2d-api.html#attr-canvas-height">height</a></code> attributes doesn't reset the <em>origin-clean</em> flag.</p>
      </div>
    </div>
    
    
    
    
    <div class="section">
      <h2 id="relationships">7. Relationship to other specifications</h2>
      <p>
        <strong>This section is informative.</strong>
      </p>
      <div class="section">
        <h3 id="rel-dom1core">7.1. <acronym title="Document Object Model">DOM</acronym> Level 3 Core</h3>
        <p>
             This is a supplementary specification to DOM3-Core.  It may be implemented natively in other languages, such as HTML or SVG.
          </p>
      </div>
      <div class="section">
        <h3 id="rel-html5">7.2. <acronym title="HyperText Markup Language, version 5">HTML5</acronym></h3>
        <p>
             This is derived from the HTML5 specification, and is meant to be supplementary to the <code>canvas</code> element in particular.
          </p>
      </div>
    </div>
    
    
    
    
    <div id="sec-appdx1">
      <h2 id="changes">A. Change History</h2>
      
      <p>This specification began as a section of the HTML5 specification, before being split out into a separate specification.  Here are some of the changes made during that transition:</p>
      <ul>
        <li>Some introductory material was added, to the document and several sections</li>
        <li>Some slight reordering of material was made, with new heading structure</li>
        <li>The interface was made more generic, to apply to SVG as well as HTML</li>
        <li>Separate sections were added for accessibility and security considerations</li>
        <li>A definitions section was added</li>
        <li>The public-canvas-api mailing list was added to the status section</li>
      </ul>
      
      <p>Please note that this draft is a work in progress, and is not yet intended as a definitive reference.  Editors for this draft are welcome.</p>
      
      <p>To Do:</p>
      <ul>
        <li>Address accessibility concerns in a more comprehensive manner.</li>
        <li>Consider changing instances of HTMLImageElement, HTMLCanvasElement, and HTMLVideoElement to more generic elements to allow SVG and other languages to supply their own equivalents.</li>
        <li>Finish reconciling normative links to HTML5 specification.</li>
        <li>Update Status section after discussion.</li>
			<li>Correct to Infinity and Not-a-Number</li>
      </ul>
    </div>
    
    
    
    
    <div id="sec-appdx2">
      <h2 id="refs">B. References</h2>
      <h3 id="normrefs">Normative References</h3>
      <dl>
       <dt id="refsBEZIER">[BEZIER]</dt>
       <dd><cite>Courbes à poles</cite>, P. de Casteljau. INPI, 1959.</dd>

       <dt id="refsCSS">[CSS]</dt>
       <dd><cite><a href="http://www.w3.org/TR/CSS/">Cascading Style Sheets Level 2
       Revision 1</a></cite>, B. Bos, T. Çelik, I.
       Hickson, H. Lie. W3C, April 2009.</dd>

      <dt id="refsCSSCOLOR">[CSSCOLOR]</dt>
       <!--
       <dd><cite><a href="http://www.w3.org/TR/css3-color/">CSS Color
       Module Level 3</a></cite>, T. &Ccedil;elik, C. Lilley, L.
       Baron. W3C, July 2008.</dd>
       -->
       <dd><cite><a href="http://dev.w3.org/csswg/css3-color/">CSS Color
       Module Level 3</a></cite>, T. Çelik, C. Lilley, L.
       Baron. W3C, August 2008.</dd>
      
       <dt id="refsCSSFONTS">[CSSFONTS]</dt>
       <dd><cite><a href="http://www.w3.org/TR/css3-fonts/">CSS Fonts
       Module Level 3</a></cite>, J. Daggett. W3C, June 2009.</dd>

       <dt id="refsCSSOM">[CSSOM]</dt>
       <dd><cite><a href="http://dev.w3.org/csswg/cssom/">Cascading Style Sheets
       Object Model (CSSOM)</a></cite>, A. van Kesteren. W3C, December 2007.</dd>

       <dt id="refsECMA262">[ECMA262]</dt>
       <dd><cite><a href="http://www.ecma-international.org/publications/standards/Ecma-262.htm">ECMAScript
       Language Specification</a></cite>. ECMA, December 1999.</dd>

       <dt id="refsGRAPHICS">[GRAPHICS]</dt>
       <dd>(Non-normative) <cite>Computer Graphics: Principles and
       Practice in C</cite>, Second Edition, J. Foley, A. van Dam,
       S. Feiner, J. Hughes. Addison-Wesley, July 1995. ISBN 0-201-84840-6.</dd>
      
       <dt id="ref-HTML5"><strong class="normref">[HTML5]</strong></dt>
       <dd><cite class="w3crec"><a href="http://www.w3.org/TR/2009/WD-html5-20090423/">HTML 5</a></cite>,
       I. Hickson, D. Hyatt, eds.
       World Wide Web Consortium, 23 April 2009, work in progress.
       <br>The <a href="http://www.w3.org/TR/html5/">latest edition of HTML 5</a> is available at http://www.w3.org/TR/html5/.
       </dd>

       <dt id="refsIEEE754">[IEEE754]</dt>
       <dd><cite><a href="http://ieeexplore.ieee.org/servlet/opac?punumber=4610933">IEEE
       Standard for Floating-Point Arithmetic (IEEE 754)</a></cite>. IEEE,
       August 2008. ISBN 978-0-7381-5753-5.</dd>

       <dt id="refsPNG">[PNG]</dt>
       <dd><cite><a href="http://www.w3.org/TR/PNG/">Portable Network
       Graphics (PNG) Specification</a></cite>, D. Duce. W3C, November
       2003.</dd>

       <dt id="refsPORTERDUFF">[PORTERDUFF]</dt>
       <dd><cite><a href="http://keithp.com/~keithp/porterduff/p253-porter.pdf">Compositing Digital Images</a></cite>, 
       T. Porter, T. Duff. In <cite>Computer graphics</cite>, volume 18, number 3, pp. 253-259. ACM Press, July 1984.
       </dd>

       <dt id="refsRFC2119"><strong class="normref">[RFC2119]</strong></dt>
       <dd><cite><a href="http://tools.ietf.org/html/rfc2119">Key words for use in RFCs to Indicate Requirement Levels</a></cite>,
       S. Bradner, March 1997.
       <br>Available at http://tools.ietf.org/html/rfc2119.
       </dd>
=======
        <dt id="ref-RFC2119"><strong class="normref">[RFC2119]</strong></dt>
        <dd><cite><a href="http://tools.ietf.org/html/rfc2119">Key words for use in RFCs to Indicate Requirement Levels</a></cite>,
        S. Bradner, March 1997.
        <br>Available at http://tools.ietf.org/html/rfc2119.
        </dd>
      
        <dt id="ref-HTML5"><strong class="normref">[HTML5]</strong></dt>
        <dd><cite class="w3crec"><a href="http://www.w3.org/TR/2009/WD-html5-20090423/">HTML 5</a></cite>,
        I. Hickson, D. Hyatt, eds.
        World Wide Web Consortium, 23 April 2009, work in progress.
        <br>This edition of HTML 5 is http://www.w3.org/TR/2009/WD-html5-20090423/.
        <br>The <a href="http://www.w3.org/TR/html5/">latest edition of HTML 5</a> is available at http://www.w3.org/TR/html5/.
        </dd>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; 1.1
=======
   
       <dt id="refsBEZIER">[BEZIER]</dt>
       <dd><cite>Courbes à poles</cite>, P. de Casteljau. INPI, 1959.</dd>

       <dt id="refsCSS">[CSS]</dt>
       <dd><cite><a href="http://www.w3.org/TR/CSS/">Cascading Style Sheets Level 2
       Revision 1</a></cite>, B. Bos, T. Çelik, I.
       Hickson, H. Lie. W3C, April 2009.</dd>

      <dt id="refsCSSCOLOR">[CSSCOLOR]</dt>
       <!--
       <dd><cite><a href="http://www.w3.org/TR/css3-color/">CSS Color
       Module Level 3</a></cite>, T. &Ccedil;elik, C. Lilley, L.
       Baron. W3C, July 2008.</dd>
       -->
       <dd><cite><a href="http://dev.w3.org/csswg/css3-color/">CSS Color
       Module Level 3</a></cite>, T. Çelik, C. Lilley, L.
       Baron. W3C, August 2008.</dd>
      
       <dt id="refsCSSFONTS">[CSSFONTS]</dt>
       <dd><cite><a href="http://www.w3.org/TR/css3-fonts/">CSS Fonts
       Module Level 3</a></cite>, J. Daggett. W3C, June 2009.</dd>

       <dt id="refsCSSOM">[CSSOM]</dt>
       <dd><cite><a href="http://dev.w3.org/csswg/cssom/">Cascading Style Sheets
       Object Model (CSSOM)</a></cite>, A. van Kesteren. W3C, December 2007.</dd>

       <dt id="refsECMA262">[ECMA262]</dt>
       <dd><cite><a href="http://www.ecma-international.org/publications/standards/Ecma-262.htm">ECMAScript
       Language Specification</a></cite>. ECMA, December 1999.</dd>

       <dt id="refsGRAPHICS">[GRAPHICS]</dt>
       <dd>(Non-normative) <cite>Computer Graphics: Principles and
       Practice in C</cite>, Second Edition, J. Foley, A. van Dam,
       S. Feiner, J. Hughes. Addison-Wesley, July 1995. ISBN 0-201-84840-6.</dd>
      
       <dt id="ref-HTML5"><strong class="normref">[HTML5]</strong></dt>
       <dd><cite class="w3crec"><a href="http://www.w3.org/TR/2009/WD-html5-20090423/">HTML 5</a></cite>,
       I. Hickson, D. Hyatt, eds.
       World Wide Web Consortium, 23 April 2009, work in progress.
       <br>The <a href="http://www.w3.org/TR/html5/">latest edition of HTML 5</a> is available at http://www.w3.org/TR/html5/.
       </dd>

       <dt id="refsIEEE754">[IEEE754]</dt>
       <dd><cite><a href="http://ieeexplore.ieee.org/servlet/opac?punumber=4610933">IEEE
       Standard for Floating-Point Arithmetic (IEEE 754)</a></cite>. IEEE,
       August 2008. ISBN 978-0-7381-5753-5.</dd>

       <dt id="refsPORTERDUFF">[PORTERDUFF]</dt>
       <dd><cite><a href="http://keithp.com/~keithp/porterduff/p253-porter.pdf">Compositing Digital Images</a></cite>, 
       T. Porter, T. Duff. In <cite>Computer graphics</cite>, volume 18, number 3, pp. 253-259. ACM Press, July 1984.
       </dd>

       <dt id="refsRFC2119"><strong class="normref">[RFC2119]</strong></dt>
       <dd><cite><a href="http://tools.ietf.org/html/rfc2119">Key words for use in RFCs to Indicate Requirement Levels</a></cite>,
       S. Bradner, March 1997.
       <br>Available at http://tools.ietf.org/html/rfc2119.
       </dd>

       <dt id="refsWEBIDL">[WEBIDL]</dt>
       <!--
       <dd><cite><a href="http://www.w3.org/TR/WebIDL/">Web
       IDL</a></cite>, C. McCormack. W3C, December 2008.</dd>
       -->
       <dd><cite><a href="http://dev.w3.org/2006/webapi/WebIDL/">Web
       IDL</a></cite>, C. McCormack. W3C, July 2009.
       </dd>

      </dl>
      
      <h3 id="informrefs">Informative References</h3>
    </div>
    <div>
      <h2 id="Acknowledgments">C. Acknowledgments</h2>
      <p>
    	  The editors would like to acknowledge and thank the following people for 
	  substantive aid with this specification:
  </p>
    </div>
  

</body></html>